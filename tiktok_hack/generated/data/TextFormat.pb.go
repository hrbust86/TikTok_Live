// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.31.0
// 	protoc        v4.24.2
// source: data/TextFormat.proto

package data

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// 更新时间 2024-06-06
type TextFormat struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 颜色，可能以字符串形式存储，如十六进制颜色代码
	Color string `protobuf:"bytes,1,opt,name=color,proto3" json:"color,omitempty"`
	// 是否加粗
	Bold bool `protobuf:"varint,2,opt,name=bold,proto3" json:"bold,omitempty"`
	// 是否斜体
	Italic bool `protobuf:"varint,3,opt,name=italic,proto3" json:"italic,omitempty"`
	// 字重，可能是一个整数，表示字体的粗细程度
	Weight int32 `protobuf:"varint,4,opt,name=weight,proto3" json:"weight,omitempty"`
	// 斜体角度，可能表示斜体字的倾斜角度
	ItalicAngle int32 `protobuf:"varint,5,opt,name=italic_angle,json=italicAngle,proto3" json:"italic_angle,omitempty"`
	// 字体大小
	FontSize int32 `protobuf:"varint,6,opt,name=font_size,json=fontSize,proto3" json:"font_size,omitempty"`
	// 是否使用高亮颜色
	UseHeighlightColor bool `protobuf:"varint,7,opt,name=use_heighlight_color,json=useHeighlightColor,proto3" json:"use_heighlight_color,omitempty"` // 假设字段名是 "use_highlight_color"，这里根据实际情况调整
	// 是否使用远程颜色，可能表示颜色信息是从远程配置或资源中获取
	UseRemoteColor bool `protobuf:"varint,8,opt,name=use_remote_color,json=useRemoteColor,proto3" json:"use_remote_color,omitempty"`
}

func (x *TextFormat) Reset() {
	*x = TextFormat{}
	if protoimpl.UnsafeEnabled {
		mi := &file_data_TextFormat_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TextFormat) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TextFormat) ProtoMessage() {}

func (x *TextFormat) ProtoReflect() protoreflect.Message {
	mi := &file_data_TextFormat_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TextFormat.ProtoReflect.Descriptor instead.
func (*TextFormat) Descriptor() ([]byte, []int) {
	return file_data_TextFormat_proto_rawDescGZIP(), []int{0}
}

func (x *TextFormat) GetColor() string {
	if x != nil {
		return x.Color
	}
	return ""
}

func (x *TextFormat) GetBold() bool {
	if x != nil {
		return x.Bold
	}
	return false
}

func (x *TextFormat) GetItalic() bool {
	if x != nil {
		return x.Italic
	}
	return false
}

func (x *TextFormat) GetWeight() int32 {
	if x != nil {
		return x.Weight
	}
	return 0
}

func (x *TextFormat) GetItalicAngle() int32 {
	if x != nil {
		return x.ItalicAngle
	}
	return 0
}

func (x *TextFormat) GetFontSize() int32 {
	if x != nil {
		return x.FontSize
	}
	return 0
}

func (x *TextFormat) GetUseHeighlightColor() bool {
	if x != nil {
		return x.UseHeighlightColor
	}
	return false
}

func (x *TextFormat) GetUseRemoteColor() bool {
	if x != nil {
		return x.UseRemoteColor
	}
	return false
}

var File_data_TextFormat_proto protoreflect.FileDescriptor

var file_data_TextFormat_proto_rawDesc = []byte{
	0x0a, 0x15, 0x64, 0x61, 0x74, 0x61, 0x2f, 0x54, 0x65, 0x78, 0x74, 0x46, 0x6f, 0x72, 0x6d, 0x61,
	0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0b, 0x74, 0x69, 0x6b, 0x74, 0x6f, 0x6b, 0x5f,
	0x68, 0x61, 0x63, 0x6b, 0x22, 0x82, 0x02, 0x0a, 0x0a, 0x54, 0x65, 0x78, 0x74, 0x46, 0x6f, 0x72,
	0x6d, 0x61, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x62, 0x6f, 0x6c,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x04, 0x62, 0x6f, 0x6c, 0x64, 0x12, 0x16, 0x0a,
	0x06, 0x69, 0x74, 0x61, 0x6c, 0x69, 0x63, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x69,
	0x74, 0x61, 0x6c, 0x69, 0x63, 0x12, 0x16, 0x0a, 0x06, 0x77, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x77, 0x65, 0x69, 0x67, 0x68, 0x74, 0x12, 0x21, 0x0a,
	0x0c, 0x69, 0x74, 0x61, 0x6c, 0x69, 0x63, 0x5f, 0x61, 0x6e, 0x67, 0x6c, 0x65, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x0b, 0x69, 0x74, 0x61, 0x6c, 0x69, 0x63, 0x41, 0x6e, 0x67, 0x6c, 0x65,
	0x12, 0x1b, 0x0a, 0x09, 0x66, 0x6f, 0x6e, 0x74, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x08, 0x66, 0x6f, 0x6e, 0x74, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x30, 0x0a,
	0x14, 0x75, 0x73, 0x65, 0x5f, 0x68, 0x65, 0x69, 0x67, 0x68, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x5f,
	0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x18, 0x07, 0x20, 0x01, 0x28, 0x08, 0x52, 0x12, 0x75, 0x73, 0x65,
	0x48, 0x65, 0x69, 0x67, 0x68, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x12,
	0x28, 0x0a, 0x10, 0x75, 0x73, 0x65, 0x5f, 0x72, 0x65, 0x6d, 0x6f, 0x74, 0x65, 0x5f, 0x63, 0x6f,
	0x6c, 0x6f, 0x72, 0x18, 0x08, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0e, 0x75, 0x73, 0x65, 0x52, 0x65,
	0x6d, 0x6f, 0x74, 0x65, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x42, 0x6b, 0x0a, 0x45, 0x63, 0x6f, 0x6f,
	0x6c, 0x2e, 0x73, 0x63, 0x78, 0x2e, 0x6c, 0x69, 0x76, 0x65, 0x5f, 0x72, 0x6f, 0x6f, 0x6d, 0x5f,
	0x77, 0x61, 0x74, 0x63, 0x68, 0x65, 0x72, 0x2e, 0x69, 0x6d, 0x70, 0x6c, 0x2e, 0x74, 0x69, 0x6b,
	0x74, 0x6f, 0x6b, 0x5f, 0x68, 0x61, 0x63, 0x6b, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x5f, 0x65,
	0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e, 0x77, 0x65, 0x62, 0x63, 0x61, 0x73, 0x74, 0x2e, 0x64, 0x61,
	0x74, 0x61, 0x50, 0x01, 0x5a, 0x20, 0x53, 0x75, 0x6e, 0x6e, 0x79, 0x2f, 0x74, 0x69, 0x6b, 0x74,
	0x6f, 0x6b, 0x5f, 0x68, 0x61, 0x63, 0x6b, 0x2f, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65,
	0x64, 0x2f, 0x64, 0x61, 0x74, 0x61, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_data_TextFormat_proto_rawDescOnce sync.Once
	file_data_TextFormat_proto_rawDescData = file_data_TextFormat_proto_rawDesc
)

func file_data_TextFormat_proto_rawDescGZIP() []byte {
	file_data_TextFormat_proto_rawDescOnce.Do(func() {
		file_data_TextFormat_proto_rawDescData = protoimpl.X.CompressGZIP(file_data_TextFormat_proto_rawDescData)
	})
	return file_data_TextFormat_proto_rawDescData
}

var file_data_TextFormat_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_data_TextFormat_proto_goTypes = []interface{}{
	(*TextFormat)(nil), // 0: tiktok_hack.TextFormat
}
var file_data_TextFormat_proto_depIdxs = []int32{
	0, // [0:0] is the sub-list for method output_type
	0, // [0:0] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_data_TextFormat_proto_init() }
func file_data_TextFormat_proto_init() {
	if File_data_TextFormat_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_data_TextFormat_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TextFormat); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_data_TextFormat_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   1,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_data_TextFormat_proto_goTypes,
		DependencyIndexes: file_data_TextFormat_proto_depIdxs,
		MessageInfos:      file_data_TextFormat_proto_msgTypes,
	}.Build()
	File_data_TextFormat_proto = out.File
	file_data_TextFormat_proto_rawDesc = nil
	file_data_TextFormat_proto_goTypes = nil
	file_data_TextFormat_proto_depIdxs = nil
}

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.31.0
// 	protoc        v4.24.2
// source: data/User.proto

package data

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// 更新时间 2024-06-06
type User struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 用户唯一标识符
	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	// 以下字段已被弃用
	Deprecated1  int64  `protobuf:"varint,2,opt,name=deprecated1,proto3" json:"deprecated1,omitempty"`    // 已弃用的字段1
	Deprecated2  int32  `protobuf:"varint,4,opt,name=deprecated2,proto3" json:"deprecated2,omitempty"`    // 已弃用的字段2
	Deprecated3  int32  `protobuf:"varint,6,opt,name=deprecated3,proto3" json:"deprecated3,omitempty"`    // 已弃用的字段3
	Deprecated4  int64  `protobuf:"varint,7,opt,name=deprecated4,proto3" json:"deprecated4,omitempty"`    // 已弃用的字段4
	Deprecated5  string `protobuf:"bytes,8,opt,name=deprecated5,proto3" json:"deprecated5,omitempty"`     // 已弃用的字段5
	Deprecated6  int32  `protobuf:"varint,13,opt,name=deprecated6,proto3" json:"deprecated6,omitempty"`   // 已弃用的字段6
	Deprecated7  string `protobuf:"bytes,14,opt,name=deprecated7,proto3" json:"deprecated7,omitempty"`    // 已弃用的字段7
	Deprecated8  int32  `protobuf:"varint,20,opt,name=deprecated8,proto3" json:"deprecated8,omitempty"`   // 已弃用的字段8
	Deprecated21 int64  `protobuf:"varint,41,opt,name=deprecated21,proto3" json:"deprecated21,omitempty"` // 已弃用的字段21
	// 用户昵称
	Nickname string `protobuf:"bytes,3,opt,name=nickname,proto3" json:"nickname,omitempty"`
	// 用户个人简介
	BioDescription string `protobuf:"bytes,5,opt,name=bio_description,json=bioDescription,proto3" json:"bio_description,omitempty"`
	// 用户头像，可能有多种尺寸
	AvatarThumb  *Image `protobuf:"bytes,9,opt,name=avatar_thumb,json=avatarThumb,proto3" json:"avatar_thumb,omitempty"`     // 缩略图尺寸的头像
	AvatarMedium *Image `protobuf:"bytes,10,opt,name=avatar_medium,json=avatarMedium,proto3" json:"avatar_medium,omitempty"` // 中等尺寸的头像
	AvatarLarge  *Image `protobuf:"bytes,11,opt,name=avatar_large,json=avatarLarge,proto3" json:"avatar_large,omitempty"`    // 大尺寸的头像
	// 用户的认证状态
	Verified bool `protobuf:"varint,12,opt,name=verified,proto3" json:"verified,omitempty"`
	// 用户状态
	Status int32 `protobuf:"varint,15,opt,name=status,proto3" json:"status,omitempty"`
	// 用户创建和修改的时间戳
	CreateTime int64 `protobuf:"varint,16,opt,name=create_time,json=createTime,proto3" json:"create_time,omitempty"` // 创建时间
	ModifyTime int64 `protobuf:"varint,17,opt,name=modify_time,json=modifyTime,proto3" json:"modify_time,omitempty"` // 修改时间
	// 用户的隐私状态
	Secret int32 `protobuf:"varint,18,opt,name=secret,proto3" json:"secret,omitempty"`
	// 用户分享的二维码统一资源标识符
	ShareQrcodeUri string `protobuf:"bytes,19,opt,name=share_qrcode_uri,json=shareQrcodeUri,proto3" json:"share_qrcode_uri,omitempty"`
	// 用户的徽章图片列表
	BadgeImageList []*Image `protobuf:"bytes,21,rep,name=badge_image_list,json=badgeImageList,proto3" json:"badge_image_list,omitempty"` // 徽章图片列表
	// 关注信息，可能包含关注者数量等
	FollowInfo *User_FollowInfo `protobuf:"bytes,22,opt,name=follow_info,json=followInfo,proto3" json:"follow_info,omitempty"`
	// 用户的付费等级
	PayGrade *User_PayGrade `protobuf:"bytes,23,opt,name=pay_grade,json=payGrade,proto3" json:"pay_grade,omitempty"`
	// 用户的粉丝俱乐部信息
	FansClub *User_FansClub `protobuf:"bytes,24,opt,name=fans_club,json=fansClub,proto3" json:"fans_club,omitempty"`
	// 用户的边框信息，可能用于界面展示
	Border *User_Border `protobuf:"bytes,25,opt,name=border,proto3" json:"border,omitempty"`
	// 特殊标识符，具体用途未知
	SpecialId string `protobuf:"bytes,26,opt,name=special_id,json=specialId,proto3" json:"special_id,omitempty"`
	// 头像边框图片
	AvatarBorder *Image `protobuf:"bytes,27,opt,name=avatar_border,json=avatarBorder,proto3" json:"avatar_border,omitempty"`
	// 勋章图片
	Medal *Image `protobuf:"bytes,28,opt,name=medal,proto3" json:"medal,omitempty"`
	// 实时图标列表
	RealTimeIcons []*Image `protobuf:"bytes,29,rep,name=real_time_icons,json=realTimeIcons,proto3" json:"real_time_icons,omitempty"`
	// 新实时图标列表
	NewRealTimeIcons []*Image `protobuf:"bytes,30,rep,name=new_real_time_icons,json=newRealTimeIcons,proto3" json:"new_real_time_icons,omitempty"`
	// 顶级VIP编号
	TopVipNo int64 `protobuf:"varint,31,opt,name=top_vip_no,json=topVipNo,proto3" json:"top_vip_no,omitempty"`
	// 用户属性
	UserAttr *User_UserAttr `protobuf:"bytes,32,opt,name=user_attr,json=userAttr,proto3" json:"user_attr,omitempty"`
	// 用户自己的房间信息
	OwnRoom *User_OwnRoom `protobuf:"bytes,33,opt,name=own_room,json=ownRoom,proto3" json:"own_room,omitempty"`
	// 用户的付费积分
	PayScore int64 `protobuf:"varint,34,opt,name=pay_score,json=payScore,proto3" json:"pay_score,omitempty"`
	// 用户的票数计数
	TicketCount int64 `protobuf:"varint,35,opt,name=ticket_count,json=ticketCount,proto3" json:"ticket_count,omitempty"`
	// 主播信息
	AnchorInfo *User_AnchorInfo `protobuf:"bytes,36,opt,name=anchor_info,json=anchorInfo,proto3" json:"anchor_info,omitempty"`
	// 连麦统计信息
	LinkMicStats int32 `protobuf:"varint,37,opt,name=link_mic_stats,json=linkMicStats,proto3" json:"link_mic_stats,omitempty"`
	// 用户展示ID
	DisplayId string `protobuf:"bytes,38,opt,name=display_id,json=displayId,proto3" json:"display_id,omitempty"`
	// 是否具有商业权限
	WithCommercePermission bool `protobuf:"varint,39,opt,name=with_commerce_permission,json=withCommercePermission,proto3" json:"with_commerce_permission,omitempty"`
	// 是否具有融合店铺入口
	WithFusionShopEntry bool `protobuf:"varint,40,opt,name=with_fusion_shop_entry,json=withFusionShopEntry,proto3" json:"with_fusion_shop_entry,omitempty"`
	// 已弃用的字段9
	Deprecated9 int32 `protobuf:"varint,48,opt,name=deprecated9,proto3" json:"deprecated9,omitempty"`
	// 用户活动信息
	ActivityReward *User_ActivityInfo `protobuf:"bytes,49,opt,name=activity_reward,json=activityReward,proto3" json:"activity_reward,omitempty"`
	// 已弃用的字段10
	Deprecated10 int32 `protobuf:"varint,50,opt,name=deprecated10,proto3" json:"deprecated10,omitempty"`
	// 已弃用的字段11
	Deprecated11 int32 `protobuf:"varint,51,opt,name=deprecated11,proto3" json:"deprecated11,omitempty"`
	// 个人卡片图片
	PersonalCard *Image `protobuf:"bytes,52,opt,name=personal_card,json=personalCard,proto3" json:"personal_card,omitempty"`
	// 认证信息
	AuthenticationInfo *User_AuthenticationInfo `protobuf:"bytes,53,opt,name=authentication_info,json=authenticationInfo,proto3" json:"authentication_info,omitempty"`
	// 已弃用的字段12
	Deprecated12 int32 `protobuf:"varint,54,opt,name=deprecated12,proto3" json:"deprecated12,omitempty"`
	// 已弃用的字段13
	Deprecated13 int32 `protobuf:"varint,55,opt,name=deprecated13,proto3" json:"deprecated13,omitempty"`
	// 已弃用的字段14
	Deprecated14 *User_DeprecatedType6 `protobuf:"bytes,56,opt,name=deprecated14,proto3" json:"deprecated14,omitempty"`
	// 媒体徽章图片列表
	MediaBadgeImageList []*Image `protobuf:"bytes,57,rep,name=media_badge_image_list,json=mediaBadgeImageList,proto3" json:"media_badge_image_list,omitempty"`
	// 已弃用的字段15
	Deprecated15 int32 `protobuf:"varint,58,opt,name=deprecated15,proto3" json:"deprecated15,omitempty"`
	// 用户VIP信息
	UserVipInfo *User_UserVIPInfo `protobuf:"bytes,59,opt,name=user_vip_info,json=userVipInfo,proto3" json:"user_vip_info,omitempty"`
	// 商业配置ID列表
	CommerceWebcastConfigIds []int64 `protobuf:"varint,60,rep,packed,name=commerce_webcast_config_ids,json=commerceWebcastConfigIds,proto3" json:"commerce_webcast_config_ids,omitempty"`
	// 边框列表
	BorderList []*User_Border `protobuf:"bytes,61,rep,name=border_list,json=borderList,proto3" json:"border_list,omitempty"`
	// 组合徽章信息
	ComboBadgeInfo *User_ComboBadgeInfo `protobuf:"bytes,62,opt,name=combo_badge_info,json=comboBadgeInfo,proto3" json:"combo_badge_info,omitempty"`
	// 关注信息
	SubscribeInfo *User_SubscribeInfo `protobuf:"bytes,63,opt,name=subscribe_info,json=subscribeInfo,proto3" json:"subscribe_info,omitempty"`
	// 徽章列表
	BadgeList []*User_BadgeStruct `protobuf:"bytes,64,rep,name=badge_list,json=badgeList,proto3" json:"badge_list,omitempty"`
	// 薄荷型标签列表
	MintTypeLabel []int64 `protobuf:"varint,65,rep,packed,name=mint_type_label,json=mintTypeLabel,proto3" json:"mint_type_label,omitempty"`
	// 粉丝俱乐部信息
	FansClubInfo *FansClubInfo `protobuf:"bytes,66,opt,name=fans_club_info,json=fansClubInfo,proto3" json:"fans_club_info,omitempty"`
	// 以下字段用于设置用户的隐私选项
	Deprecated19                        bool `protobuf:"varint,1001,opt,name=deprecated19,proto3" json:"deprecated19,omitempty"`                                                                                                  // 已弃用的字段19
	AllowFindByContacts                 bool `protobuf:"varint,1002,opt,name=allow_find_by_contacts,json=allowFindByContacts,proto3" json:"allow_find_by_contacts,omitempty"`                                                     // 是否允许通过联系人查找
	AllowOthersDownloadVideo            bool `protobuf:"varint,1003,opt,name=allow_others_download_video,json=allowOthersDownloadVideo,proto3" json:"allow_others_download_video,omitempty"`                                      // 是否允许他人下载视频
	AllowOthersDownloadWhenSharingVideo bool `protobuf:"varint,1004,opt,name=allow_others_download_when_sharing_video,json=allowOthersDownloadWhenSharingVideo,proto3" json:"allow_others_download_when_sharing_video,omitempty"` // 是否允许分享视频时他人下载
	AllowShareShowProfile               bool `protobuf:"varint,1005,opt,name=allow_share_show_profile,json=allowShareShowProfile,proto3" json:"allow_share_show_profile,omitempty"`                                               // 是否允许在分享中展示个人资料
	AllowShowInGossip                   bool `protobuf:"varint,1006,opt,name=allow_show_in_gossip,json=allowShowInGossip,proto3" json:"allow_show_in_gossip,omitempty"`                                                           // 是否允许在八卦中展示
	AllowShowMyAction                   bool `protobuf:"varint,1007,opt,name=allow_show_my_action,json=allowShowMyAction,proto3" json:"allow_show_my_action,omitempty"`                                                           // 是否允许展示我的动作
	AllowStrangeComment                 bool `protobuf:"varint,1008,opt,name=allow_strange_comment,json=allowStrangeComment,proto3" json:"allow_strange_comment,omitempty"`                                                       // 是否允许陌生人评论
	AllowUnfollowerComment              bool `protobuf:"varint,1009,opt,name=allow_unfollower_comment,json=allowUnfollowerComment,proto3" json:"allow_unfollower_comment,omitempty"`                                              // 是否允许未关注者评论
	AllowUseLinkmic                     bool `protobuf:"varint,1010,opt,name=allow_use_linkmic,json=allowUseLinkmic,proto3" json:"allow_use_linkmic,omitempty"`                                                                   // 是否允许使用连麦功能
	// 主播等级
	AnchorLevel *User_AnchorLevel `protobuf:"bytes,1011,opt,name=anchor_level,json=anchorLevel,proto3" json:"anchor_level,omitempty"`
	// 用户的背景图片URL
	BgImgUrl string `protobuf:"bytes,1013,opt,name=bg_img_url,json=bgImgUrl,proto3" json:"bg_img_url,omitempty"`
	// 已弃用的字段18
	Deprecated18 string `protobuf:"bytes,1014,opt,name=deprecated18,proto3" json:"deprecated18,omitempty"`
	// 已弃用的字段16
	Deprecated16 bool `protobuf:"varint,1015,opt,name=deprecated16,proto3" json:"deprecated16,omitempty"`
	// 用户的屏蔽状态
	BlockStatus int32 `protobuf:"varint,1016,opt,name=block_status,json=blockStatus,proto3" json:"block_status,omitempty"`
	// 用户的评论限制
	CommentRestrict int32 `protobuf:"varint,1017,opt,name=comment_restrict,json=commentRestrict,proto3" json:"comment_restrict,omitempty"`
	// 用户的星座
	Constellation string `protobuf:"bytes,1018,opt,name=constellation,proto3" json:"constellation,omitempty"`
	// 是否禁用Ichat
	DisableIchat int32 `protobuf:"varint,1019,opt,name=disable_ichat,json=disableIchat,proto3" json:"disable_ichat,omitempty"`
	// 启用Ichat图片的标识符
	EnableIchatImg int64 `protobuf:"varint,1020,opt,name=enable_ichat_img,json=enableIchatImg,proto3" json:"enable_ichat_img,omitempty"`
	// 用户的经验值
	Exp int32 `protobuf:"varint,1021,opt,name=exp,proto3" json:"exp,omitempty"`
	// 粉丝票数量
	FanTicketCount int64 `protobuf:"varint,1022,opt,name=fan_ticket_count,json=fanTicketCount,proto3" json:"fan_ticket_count,omitempty"`
	// 是否折叠陌生人聊天
	FoldStrangerChat bool `protobuf:"varint,1023,opt,name=fold_stranger_chat,json=foldStrangerChat,proto3" json:"fold_stranger_chat,omitempty"`
	// 关注状态
	FollowStatus int64 `protobuf:"varint,1024,opt,name=follow_status,json=followStatus,proto3" json:"follow_status,omitempty"`
	// 已弃用的字段28
	Deprecated28 bool `protobuf:"varint,1025,opt,name=deprecated28,proto3" json:"deprecated28,omitempty"`
	// 已弃用的字段29
	Deprecated29 string `protobuf:"bytes,1026,opt,name=deprecated29,proto3" json:"deprecated29,omitempty"`
	// Ichat限制类型
	IchatRestrictType int32 `protobuf:"varint,1027,opt,name=ichat_restrict_type,json=ichatRestrictType,proto3" json:"ichat_restrict_type,omitempty"`
	// 用户的ID字符串
	IdStr string `protobuf:"bytes,1028,opt,name=id_str,json=idStr,proto3" json:"id_str,omitempty"`
	// 是否是关注者
	IsFollower bool `protobuf:"varint,1029,opt,name=is_follower,json=isFollower,proto3" json:"is_follower,omitempty"`
	// 是否正在关注
	IsFollowing bool `protobuf:"varint,1030,opt,name=is_following,json=isFollowing,proto3" json:"is_following,omitempty"`
	// 是否需要个人资料引导
	NeedProfileGuide bool `protobuf:"varint,1031,opt,name=need_profile_guide,json=needProfileGuide,proto3" json:"need_profile_guide,omitempty"`
	// 付费积分
	PayScores int64 `protobuf:"varint,1032,opt,name=pay_scores,json=payScores,proto3" json:"pay_scores,omitempty"`
	// 推送评论状态
	PushCommentStatus bool `protobuf:"varint,1033,opt,name=push_comment_status,json=pushCommentStatus,proto3" json:"push_comment_status,omitempty"`
	// 推送点赞
	PushDigg bool `protobuf:"varint,1034,opt,name=push_digg,json=pushDigg,proto3" json:"push_digg,omitempty"`
	// 推送关注
	PushFollow bool `protobuf:"varint,1035,opt,name=push_follow,json=pushFollow,proto3" json:"push_follow,omitempty"`
	// 推送好友动作
	PushFriendAction bool `protobuf:"varint,1036,opt,name=push_friend_action,json=pushFriendAction,proto3" json:"push_friend_action,omitempty"`
	// 推送Ichat
	PushIchat bool `protobuf:"varint,1037,opt,name=push_ichat,json=pushIchat,proto3" json:"push_ichat,omitempty"`
	// 推送状态
	PushStatus bool `protobuf:"varint,1038,opt,name=push_status,json=pushStatus,proto3" json:"push_status,omitempty"`
	// 推送视频发布
	PushVideoPost bool `protobuf:"varint,1039,opt,name=push_video_post,json=pushVideoPost,proto3" json:"push_video_post,omitempty"`
	// 推送视频推荐
	PushVideoRecommend bool `protobuf:"varint,1040,opt,name=push_video_recommend,json=pushVideoRecommend,proto3" json:"push_video_recommend,omitempty"`
	// 用户统计信息
	Stats *User_UserStats `protobuf:"bytes,1041,opt,name=stats,proto3" json:"stats,omitempty"`
	// 已弃用的字段17
	Deprecated17 bool `protobuf:"varint,1042,opt,name=deprecated17,proto3" json:"deprecated17,omitempty"`
	// 认证理由
	VerifiedReason string `protobuf:"bytes,1043,opt,name=verified_reason,json=verifiedReason,proto3" json:"verified_reason,omitempty"`
	// 是否具有车辆管理权限
	WithCarManagementPermission bool `protobuf:"varint,1044,opt,name=with_car_management_permission,json=withCarManagementPermission,proto3" json:"with_car_management_permission,omitempty"`
	// 即将到来的活动列表
	UpcomingEventList []*User_LiveEventInfo `protobuf:"bytes,1045,rep,name=upcoming_event_list,json=upcomingEventList,proto3" json:"upcoming_event_list,omitempty"`
	// SCM标签
	ScmLabel string `protobuf:"bytes,1046,opt,name=scm_label,json=scmLabel,proto3" json:"scm_label,omitempty"`
	// 电商入口信息
	EcommerceEntrance *User_EcommerceEntrance `protobuf:"bytes,1047,opt,name=ecommerce_entrance,json=ecommerceEntrance,proto3" json:"ecommerce_entrance,omitempty"`
	// 是否被屏蔽
	IsBlock bool `protobuf:"varint,1048,opt,name=is_block,json=isBlock,proto3" json:"is_block,omitempty"`
	// 是否已订阅
	IsSubscribe bool `protobuf:"varint,1090,opt,name=is_subscribe,json=isSubscribe,proto3" json:"is_subscribe,omitempty"`
}

func (x *User) Reset() {
	*x = User{}
	if protoimpl.UnsafeEnabled {
		mi := &file_data_User_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *User) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*User) ProtoMessage() {}

func (x *User) ProtoReflect() protoreflect.Message {
	mi := &file_data_User_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use User.ProtoReflect.Descriptor instead.
func (*User) Descriptor() ([]byte, []int) {
	return file_data_User_proto_rawDescGZIP(), []int{0}
}

func (x *User) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *User) GetDeprecated1() int64 {
	if x != nil {
		return x.Deprecated1
	}
	return 0
}

func (x *User) GetDeprecated2() int32 {
	if x != nil {
		return x.Deprecated2
	}
	return 0
}

func (x *User) GetDeprecated3() int32 {
	if x != nil {
		return x.Deprecated3
	}
	return 0
}

func (x *User) GetDeprecated4() int64 {
	if x != nil {
		return x.Deprecated4
	}
	return 0
}

func (x *User) GetDeprecated5() string {
	if x != nil {
		return x.Deprecated5
	}
	return ""
}

func (x *User) GetDeprecated6() int32 {
	if x != nil {
		return x.Deprecated6
	}
	return 0
}

func (x *User) GetDeprecated7() string {
	if x != nil {
		return x.Deprecated7
	}
	return ""
}

func (x *User) GetDeprecated8() int32 {
	if x != nil {
		return x.Deprecated8
	}
	return 0
}

func (x *User) GetDeprecated21() int64 {
	if x != nil {
		return x.Deprecated21
	}
	return 0
}

func (x *User) GetNickname() string {
	if x != nil {
		return x.Nickname
	}
	return ""
}

func (x *User) GetBioDescription() string {
	if x != nil {
		return x.BioDescription
	}
	return ""
}

func (x *User) GetAvatarThumb() *Image {
	if x != nil {
		return x.AvatarThumb
	}
	return nil
}

func (x *User) GetAvatarMedium() *Image {
	if x != nil {
		return x.AvatarMedium
	}
	return nil
}

func (x *User) GetAvatarLarge() *Image {
	if x != nil {
		return x.AvatarLarge
	}
	return nil
}

func (x *User) GetVerified() bool {
	if x != nil {
		return x.Verified
	}
	return false
}

func (x *User) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *User) GetCreateTime() int64 {
	if x != nil {
		return x.CreateTime
	}
	return 0
}

func (x *User) GetModifyTime() int64 {
	if x != nil {
		return x.ModifyTime
	}
	return 0
}

func (x *User) GetSecret() int32 {
	if x != nil {
		return x.Secret
	}
	return 0
}

func (x *User) GetShareQrcodeUri() string {
	if x != nil {
		return x.ShareQrcodeUri
	}
	return ""
}

func (x *User) GetBadgeImageList() []*Image {
	if x != nil {
		return x.BadgeImageList
	}
	return nil
}

func (x *User) GetFollowInfo() *User_FollowInfo {
	if x != nil {
		return x.FollowInfo
	}
	return nil
}

func (x *User) GetPayGrade() *User_PayGrade {
	if x != nil {
		return x.PayGrade
	}
	return nil
}

func (x *User) GetFansClub() *User_FansClub {
	if x != nil {
		return x.FansClub
	}
	return nil
}

func (x *User) GetBorder() *User_Border {
	if x != nil {
		return x.Border
	}
	return nil
}

func (x *User) GetSpecialId() string {
	if x != nil {
		return x.SpecialId
	}
	return ""
}

func (x *User) GetAvatarBorder() *Image {
	if x != nil {
		return x.AvatarBorder
	}
	return nil
}

func (x *User) GetMedal() *Image {
	if x != nil {
		return x.Medal
	}
	return nil
}

func (x *User) GetRealTimeIcons() []*Image {
	if x != nil {
		return x.RealTimeIcons
	}
	return nil
}

func (x *User) GetNewRealTimeIcons() []*Image {
	if x != nil {
		return x.NewRealTimeIcons
	}
	return nil
}

func (x *User) GetTopVipNo() int64 {
	if x != nil {
		return x.TopVipNo
	}
	return 0
}

func (x *User) GetUserAttr() *User_UserAttr {
	if x != nil {
		return x.UserAttr
	}
	return nil
}

func (x *User) GetOwnRoom() *User_OwnRoom {
	if x != nil {
		return x.OwnRoom
	}
	return nil
}

func (x *User) GetPayScore() int64 {
	if x != nil {
		return x.PayScore
	}
	return 0
}

func (x *User) GetTicketCount() int64 {
	if x != nil {
		return x.TicketCount
	}
	return 0
}

func (x *User) GetAnchorInfo() *User_AnchorInfo {
	if x != nil {
		return x.AnchorInfo
	}
	return nil
}

func (x *User) GetLinkMicStats() int32 {
	if x != nil {
		return x.LinkMicStats
	}
	return 0
}

func (x *User) GetDisplayId() string {
	if x != nil {
		return x.DisplayId
	}
	return ""
}

func (x *User) GetWithCommercePermission() bool {
	if x != nil {
		return x.WithCommercePermission
	}
	return false
}

func (x *User) GetWithFusionShopEntry() bool {
	if x != nil {
		return x.WithFusionShopEntry
	}
	return false
}

func (x *User) GetDeprecated9() int32 {
	if x != nil {
		return x.Deprecated9
	}
	return 0
}

func (x *User) GetActivityReward() *User_ActivityInfo {
	if x != nil {
		return x.ActivityReward
	}
	return nil
}

func (x *User) GetDeprecated10() int32 {
	if x != nil {
		return x.Deprecated10
	}
	return 0
}

func (x *User) GetDeprecated11() int32 {
	if x != nil {
		return x.Deprecated11
	}
	return 0
}

func (x *User) GetPersonalCard() *Image {
	if x != nil {
		return x.PersonalCard
	}
	return nil
}

func (x *User) GetAuthenticationInfo() *User_AuthenticationInfo {
	if x != nil {
		return x.AuthenticationInfo
	}
	return nil
}

func (x *User) GetDeprecated12() int32 {
	if x != nil {
		return x.Deprecated12
	}
	return 0
}

func (x *User) GetDeprecated13() int32 {
	if x != nil {
		return x.Deprecated13
	}
	return 0
}

func (x *User) GetDeprecated14() *User_DeprecatedType6 {
	if x != nil {
		return x.Deprecated14
	}
	return nil
}

func (x *User) GetMediaBadgeImageList() []*Image {
	if x != nil {
		return x.MediaBadgeImageList
	}
	return nil
}

func (x *User) GetDeprecated15() int32 {
	if x != nil {
		return x.Deprecated15
	}
	return 0
}

func (x *User) GetUserVipInfo() *User_UserVIPInfo {
	if x != nil {
		return x.UserVipInfo
	}
	return nil
}

func (x *User) GetCommerceWebcastConfigIds() []int64 {
	if x != nil {
		return x.CommerceWebcastConfigIds
	}
	return nil
}

func (x *User) GetBorderList() []*User_Border {
	if x != nil {
		return x.BorderList
	}
	return nil
}

func (x *User) GetComboBadgeInfo() *User_ComboBadgeInfo {
	if x != nil {
		return x.ComboBadgeInfo
	}
	return nil
}

func (x *User) GetSubscribeInfo() *User_SubscribeInfo {
	if x != nil {
		return x.SubscribeInfo
	}
	return nil
}

func (x *User) GetBadgeList() []*User_BadgeStruct {
	if x != nil {
		return x.BadgeList
	}
	return nil
}

func (x *User) GetMintTypeLabel() []int64 {
	if x != nil {
		return x.MintTypeLabel
	}
	return nil
}

func (x *User) GetFansClubInfo() *FansClubInfo {
	if x != nil {
		return x.FansClubInfo
	}
	return nil
}

func (x *User) GetDeprecated19() bool {
	if x != nil {
		return x.Deprecated19
	}
	return false
}

func (x *User) GetAllowFindByContacts() bool {
	if x != nil {
		return x.AllowFindByContacts
	}
	return false
}

func (x *User) GetAllowOthersDownloadVideo() bool {
	if x != nil {
		return x.AllowOthersDownloadVideo
	}
	return false
}

func (x *User) GetAllowOthersDownloadWhenSharingVideo() bool {
	if x != nil {
		return x.AllowOthersDownloadWhenSharingVideo
	}
	return false
}

func (x *User) GetAllowShareShowProfile() bool {
	if x != nil {
		return x.AllowShareShowProfile
	}
	return false
}

func (x *User) GetAllowShowInGossip() bool {
	if x != nil {
		return x.AllowShowInGossip
	}
	return false
}

func (x *User) GetAllowShowMyAction() bool {
	if x != nil {
		return x.AllowShowMyAction
	}
	return false
}

func (x *User) GetAllowStrangeComment() bool {
	if x != nil {
		return x.AllowStrangeComment
	}
	return false
}

func (x *User) GetAllowUnfollowerComment() bool {
	if x != nil {
		return x.AllowUnfollowerComment
	}
	return false
}

func (x *User) GetAllowUseLinkmic() bool {
	if x != nil {
		return x.AllowUseLinkmic
	}
	return false
}

func (x *User) GetAnchorLevel() *User_AnchorLevel {
	if x != nil {
		return x.AnchorLevel
	}
	return nil
}

func (x *User) GetBgImgUrl() string {
	if x != nil {
		return x.BgImgUrl
	}
	return ""
}

func (x *User) GetDeprecated18() string {
	if x != nil {
		return x.Deprecated18
	}
	return ""
}

func (x *User) GetDeprecated16() bool {
	if x != nil {
		return x.Deprecated16
	}
	return false
}

func (x *User) GetBlockStatus() int32 {
	if x != nil {
		return x.BlockStatus
	}
	return 0
}

func (x *User) GetCommentRestrict() int32 {
	if x != nil {
		return x.CommentRestrict
	}
	return 0
}

func (x *User) GetConstellation() string {
	if x != nil {
		return x.Constellation
	}
	return ""
}

func (x *User) GetDisableIchat() int32 {
	if x != nil {
		return x.DisableIchat
	}
	return 0
}

func (x *User) GetEnableIchatImg() int64 {
	if x != nil {
		return x.EnableIchatImg
	}
	return 0
}

func (x *User) GetExp() int32 {
	if x != nil {
		return x.Exp
	}
	return 0
}

func (x *User) GetFanTicketCount() int64 {
	if x != nil {
		return x.FanTicketCount
	}
	return 0
}

func (x *User) GetFoldStrangerChat() bool {
	if x != nil {
		return x.FoldStrangerChat
	}
	return false
}

func (x *User) GetFollowStatus() int64 {
	if x != nil {
		return x.FollowStatus
	}
	return 0
}

func (x *User) GetDeprecated28() bool {
	if x != nil {
		return x.Deprecated28
	}
	return false
}

func (x *User) GetDeprecated29() string {
	if x != nil {
		return x.Deprecated29
	}
	return ""
}

func (x *User) GetIchatRestrictType() int32 {
	if x != nil {
		return x.IchatRestrictType
	}
	return 0
}

func (x *User) GetIdStr() string {
	if x != nil {
		return x.IdStr
	}
	return ""
}

func (x *User) GetIsFollower() bool {
	if x != nil {
		return x.IsFollower
	}
	return false
}

func (x *User) GetIsFollowing() bool {
	if x != nil {
		return x.IsFollowing
	}
	return false
}

func (x *User) GetNeedProfileGuide() bool {
	if x != nil {
		return x.NeedProfileGuide
	}
	return false
}

func (x *User) GetPayScores() int64 {
	if x != nil {
		return x.PayScores
	}
	return 0
}

func (x *User) GetPushCommentStatus() bool {
	if x != nil {
		return x.PushCommentStatus
	}
	return false
}

func (x *User) GetPushDigg() bool {
	if x != nil {
		return x.PushDigg
	}
	return false
}

func (x *User) GetPushFollow() bool {
	if x != nil {
		return x.PushFollow
	}
	return false
}

func (x *User) GetPushFriendAction() bool {
	if x != nil {
		return x.PushFriendAction
	}
	return false
}

func (x *User) GetPushIchat() bool {
	if x != nil {
		return x.PushIchat
	}
	return false
}

func (x *User) GetPushStatus() bool {
	if x != nil {
		return x.PushStatus
	}
	return false
}

func (x *User) GetPushVideoPost() bool {
	if x != nil {
		return x.PushVideoPost
	}
	return false
}

func (x *User) GetPushVideoRecommend() bool {
	if x != nil {
		return x.PushVideoRecommend
	}
	return false
}

func (x *User) GetStats() *User_UserStats {
	if x != nil {
		return x.Stats
	}
	return nil
}

func (x *User) GetDeprecated17() bool {
	if x != nil {
		return x.Deprecated17
	}
	return false
}

func (x *User) GetVerifiedReason() string {
	if x != nil {
		return x.VerifiedReason
	}
	return ""
}

func (x *User) GetWithCarManagementPermission() bool {
	if x != nil {
		return x.WithCarManagementPermission
	}
	return false
}

func (x *User) GetUpcomingEventList() []*User_LiveEventInfo {
	if x != nil {
		return x.UpcomingEventList
	}
	return nil
}

func (x *User) GetScmLabel() string {
	if x != nil {
		return x.ScmLabel
	}
	return ""
}

func (x *User) GetEcommerceEntrance() *User_EcommerceEntrance {
	if x != nil {
		return x.EcommerceEntrance
	}
	return nil
}

func (x *User) GetIsBlock() bool {
	if x != nil {
		return x.IsBlock
	}
	return false
}

func (x *User) GetIsSubscribe() bool {
	if x != nil {
		return x.IsSubscribe
	}
	return false
}

type FansClubInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 是否休眠，可能表示粉丝等级是否处于非活动状态
	IsSleeping bool `protobuf:"varint,1,opt,name=is_sleeping,json=isSleeping,proto3" json:"is_sleeping,omitempty"`
	// 粉丝等级，可能表示用户的粉丝等级或阶段
	FansLevel int64 `protobuf:"varint,2,opt,name=fans_level,json=fansLevel,proto3" json:"fans_level,omitempty"`
	// 粉丝得分，可能表示用户的粉丝活跃度或贡献得分
	FansScore int64 `protobuf:"varint,3,opt,name=fans_score,json=fansScore,proto3" json:"fans_score,omitempty"`
	// 徽章图片，可能表示粉丝等级对应的徽章或标识图片
	Badge *Image `protobuf:"bytes,4,opt,name=badge,proto3" json:"badge,omitempty"`
	// 粉丝数量，可能表示用户的粉丝总数
	FansCount int64 `protobuf:"varint,5,opt,name=fans_count,json=fansCount,proto3" json:"fans_count,omitempty"`
}

func (x *FansClubInfo) Reset() {
	*x = FansClubInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_data_User_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FansClubInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FansClubInfo) ProtoMessage() {}

func (x *FansClubInfo) ProtoReflect() protoreflect.Message {
	mi := &file_data_User_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FansClubInfo.ProtoReflect.Descriptor instead.
func (*FansClubInfo) Descriptor() ([]byte, []int) {
	return file_data_User_proto_rawDescGZIP(), []int{1}
}

func (x *FansClubInfo) GetIsSleeping() bool {
	if x != nil {
		return x.IsSleeping
	}
	return false
}

func (x *FansClubInfo) GetFansLevel() int64 {
	if x != nil {
		return x.FansLevel
	}
	return 0
}

func (x *FansClubInfo) GetFansScore() int64 {
	if x != nil {
		return x.FansScore
	}
	return 0
}

func (x *FansClubInfo) GetBadge() *Image {
	if x != nil {
		return x.Badge
	}
	return nil
}

func (x *FansClubInfo) GetFansCount() int64 {
	if x != nil {
		return x.FansCount
	}
	return 0
}

// 以下定义了 User 消息中的嵌套消息类型，这些类型可能用于存储特定类型的数据
type User_FollowInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *User_FollowInfo) Reset() {
	*x = User_FollowInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_data_User_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *User_FollowInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*User_FollowInfo) ProtoMessage() {}

func (x *User_FollowInfo) ProtoReflect() protoreflect.Message {
	mi := &file_data_User_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use User_FollowInfo.ProtoReflect.Descriptor instead.
func (*User_FollowInfo) Descriptor() ([]byte, []int) {
	return file_data_User_proto_rawDescGZIP(), []int{0, 0}
}

type User_PayGrade struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *User_PayGrade) Reset() {
	*x = User_PayGrade{}
	if protoimpl.UnsafeEnabled {
		mi := &file_data_User_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *User_PayGrade) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*User_PayGrade) ProtoMessage() {}

func (x *User_PayGrade) ProtoReflect() protoreflect.Message {
	mi := &file_data_User_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use User_PayGrade.ProtoReflect.Descriptor instead.
func (*User_PayGrade) Descriptor() ([]byte, []int) {
	return file_data_User_proto_rawDescGZIP(), []int{0, 1}
}

type User_FansClub struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *User_FansClub) Reset() {
	*x = User_FansClub{}
	if protoimpl.UnsafeEnabled {
		mi := &file_data_User_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *User_FansClub) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*User_FansClub) ProtoMessage() {}

func (x *User_FansClub) ProtoReflect() protoreflect.Message {
	mi := &file_data_User_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use User_FansClub.ProtoReflect.Descriptor instead.
func (*User_FansClub) Descriptor() ([]byte, []int) {
	return file_data_User_proto_rawDescGZIP(), []int{0, 2}
}

type User_Border struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *User_Border) Reset() {
	*x = User_Border{}
	if protoimpl.UnsafeEnabled {
		mi := &file_data_User_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *User_Border) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*User_Border) ProtoMessage() {}

func (x *User_Border) ProtoReflect() protoreflect.Message {
	mi := &file_data_User_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use User_Border.ProtoReflect.Descriptor instead.
func (*User_Border) Descriptor() ([]byte, []int) {
	return file_data_User_proto_rawDescGZIP(), []int{0, 3}
}

type User_UserAttr struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *User_UserAttr) Reset() {
	*x = User_UserAttr{}
	if protoimpl.UnsafeEnabled {
		mi := &file_data_User_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *User_UserAttr) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*User_UserAttr) ProtoMessage() {}

func (x *User_UserAttr) ProtoReflect() protoreflect.Message {
	mi := &file_data_User_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use User_UserAttr.ProtoReflect.Descriptor instead.
func (*User_UserAttr) Descriptor() ([]byte, []int) {
	return file_data_User_proto_rawDescGZIP(), []int{0, 4}
}

type User_OwnRoom struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *User_OwnRoom) Reset() {
	*x = User_OwnRoom{}
	if protoimpl.UnsafeEnabled {
		mi := &file_data_User_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *User_OwnRoom) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*User_OwnRoom) ProtoMessage() {}

func (x *User_OwnRoom) ProtoReflect() protoreflect.Message {
	mi := &file_data_User_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use User_OwnRoom.ProtoReflect.Descriptor instead.
func (*User_OwnRoom) Descriptor() ([]byte, []int) {
	return file_data_User_proto_rawDescGZIP(), []int{0, 5}
}

type User_AnchorInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *User_AnchorInfo) Reset() {
	*x = User_AnchorInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_data_User_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *User_AnchorInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*User_AnchorInfo) ProtoMessage() {}

func (x *User_AnchorInfo) ProtoReflect() protoreflect.Message {
	mi := &file_data_User_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use User_AnchorInfo.ProtoReflect.Descriptor instead.
func (*User_AnchorInfo) Descriptor() ([]byte, []int) {
	return file_data_User_proto_rawDescGZIP(), []int{0, 6}
}

type User_UserVIPInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *User_UserVIPInfo) Reset() {
	*x = User_UserVIPInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_data_User_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *User_UserVIPInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*User_UserVIPInfo) ProtoMessage() {}

func (x *User_UserVIPInfo) ProtoReflect() protoreflect.Message {
	mi := &file_data_User_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use User_UserVIPInfo.ProtoReflect.Descriptor instead.
func (*User_UserVIPInfo) Descriptor() ([]byte, []int) {
	return file_data_User_proto_rawDescGZIP(), []int{0, 7}
}

type User_ComboBadgeInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *User_ComboBadgeInfo) Reset() {
	*x = User_ComboBadgeInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_data_User_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *User_ComboBadgeInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*User_ComboBadgeInfo) ProtoMessage() {}

func (x *User_ComboBadgeInfo) ProtoReflect() protoreflect.Message {
	mi := &file_data_User_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use User_ComboBadgeInfo.ProtoReflect.Descriptor instead.
func (*User_ComboBadgeInfo) Descriptor() ([]byte, []int) {
	return file_data_User_proto_rawDescGZIP(), []int{0, 8}
}

type User_SubscribeInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *User_SubscribeInfo) Reset() {
	*x = User_SubscribeInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_data_User_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *User_SubscribeInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*User_SubscribeInfo) ProtoMessage() {}

func (x *User_SubscribeInfo) ProtoReflect() protoreflect.Message {
	mi := &file_data_User_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use User_SubscribeInfo.ProtoReflect.Descriptor instead.
func (*User_SubscribeInfo) Descriptor() ([]byte, []int) {
	return file_data_User_proto_rawDescGZIP(), []int{0, 9}
}

type User_BadgeStruct struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *User_BadgeStruct) Reset() {
	*x = User_BadgeStruct{}
	if protoimpl.UnsafeEnabled {
		mi := &file_data_User_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *User_BadgeStruct) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*User_BadgeStruct) ProtoMessage() {}

func (x *User_BadgeStruct) ProtoReflect() protoreflect.Message {
	mi := &file_data_User_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use User_BadgeStruct.ProtoReflect.Descriptor instead.
func (*User_BadgeStruct) Descriptor() ([]byte, []int) {
	return file_data_User_proto_rawDescGZIP(), []int{0, 10}
}

type User_ActivityInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *User_ActivityInfo) Reset() {
	*x = User_ActivityInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_data_User_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *User_ActivityInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*User_ActivityInfo) ProtoMessage() {}

func (x *User_ActivityInfo) ProtoReflect() protoreflect.Message {
	mi := &file_data_User_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use User_ActivityInfo.ProtoReflect.Descriptor instead.
func (*User_ActivityInfo) Descriptor() ([]byte, []int) {
	return file_data_User_proto_rawDescGZIP(), []int{0, 11}
}

type User_DeprecatedType1 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *User_DeprecatedType1) Reset() {
	*x = User_DeprecatedType1{}
	if protoimpl.UnsafeEnabled {
		mi := &file_data_User_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *User_DeprecatedType1) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*User_DeprecatedType1) ProtoMessage() {}

func (x *User_DeprecatedType1) ProtoReflect() protoreflect.Message {
	mi := &file_data_User_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use User_DeprecatedType1.ProtoReflect.Descriptor instead.
func (*User_DeprecatedType1) Descriptor() ([]byte, []int) {
	return file_data_User_proto_rawDescGZIP(), []int{0, 12}
}

type User_DeprecatedType4 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *User_DeprecatedType4) Reset() {
	*x = User_DeprecatedType4{}
	if protoimpl.UnsafeEnabled {
		mi := &file_data_User_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *User_DeprecatedType4) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*User_DeprecatedType4) ProtoMessage() {}

func (x *User_DeprecatedType4) ProtoReflect() protoreflect.Message {
	mi := &file_data_User_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use User_DeprecatedType4.ProtoReflect.Descriptor instead.
func (*User_DeprecatedType4) Descriptor() ([]byte, []int) {
	return file_data_User_proto_rawDescGZIP(), []int{0, 13}
}

type User_DeprecatedType5 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *User_DeprecatedType5) Reset() {
	*x = User_DeprecatedType5{}
	if protoimpl.UnsafeEnabled {
		mi := &file_data_User_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *User_DeprecatedType5) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*User_DeprecatedType5) ProtoMessage() {}

func (x *User_DeprecatedType5) ProtoReflect() protoreflect.Message {
	mi := &file_data_User_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use User_DeprecatedType5.ProtoReflect.Descriptor instead.
func (*User_DeprecatedType5) Descriptor() ([]byte, []int) {
	return file_data_User_proto_rawDescGZIP(), []int{0, 14}
}

type User_DeprecatedType6 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *User_DeprecatedType6) Reset() {
	*x = User_DeprecatedType6{}
	if protoimpl.UnsafeEnabled {
		mi := &file_data_User_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *User_DeprecatedType6) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*User_DeprecatedType6) ProtoMessage() {}

func (x *User_DeprecatedType6) ProtoReflect() protoreflect.Message {
	mi := &file_data_User_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use User_DeprecatedType6.ProtoReflect.Descriptor instead.
func (*User_DeprecatedType6) Descriptor() ([]byte, []int) {
	return file_data_User_proto_rawDescGZIP(), []int{0, 15}
}

type User_AuthenticationInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *User_AuthenticationInfo) Reset() {
	*x = User_AuthenticationInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_data_User_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *User_AuthenticationInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*User_AuthenticationInfo) ProtoMessage() {}

func (x *User_AuthenticationInfo) ProtoReflect() protoreflect.Message {
	mi := &file_data_User_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use User_AuthenticationInfo.ProtoReflect.Descriptor instead.
func (*User_AuthenticationInfo) Descriptor() ([]byte, []int) {
	return file_data_User_proto_rawDescGZIP(), []int{0, 16}
}

type User_LiveEventInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *User_LiveEventInfo) Reset() {
	*x = User_LiveEventInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_data_User_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *User_LiveEventInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*User_LiveEventInfo) ProtoMessage() {}

func (x *User_LiveEventInfo) ProtoReflect() protoreflect.Message {
	mi := &file_data_User_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use User_LiveEventInfo.ProtoReflect.Descriptor instead.
func (*User_LiveEventInfo) Descriptor() ([]byte, []int) {
	return file_data_User_proto_rawDescGZIP(), []int{0, 17}
}

type User_EcommerceEntrance struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *User_EcommerceEntrance) Reset() {
	*x = User_EcommerceEntrance{}
	if protoimpl.UnsafeEnabled {
		mi := &file_data_User_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *User_EcommerceEntrance) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*User_EcommerceEntrance) ProtoMessage() {}

func (x *User_EcommerceEntrance) ProtoReflect() protoreflect.Message {
	mi := &file_data_User_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use User_EcommerceEntrance.ProtoReflect.Descriptor instead.
func (*User_EcommerceEntrance) Descriptor() ([]byte, []int) {
	return file_data_User_proto_rawDescGZIP(), []int{0, 18}
}

type User_UserStats struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *User_UserStats) Reset() {
	*x = User_UserStats{}
	if protoimpl.UnsafeEnabled {
		mi := &file_data_User_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *User_UserStats) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*User_UserStats) ProtoMessage() {}

func (x *User_UserStats) ProtoReflect() protoreflect.Message {
	mi := &file_data_User_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use User_UserStats.ProtoReflect.Descriptor instead.
func (*User_UserStats) Descriptor() ([]byte, []int) {
	return file_data_User_proto_rawDescGZIP(), []int{0, 19}
}

type User_AnchorLevel struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *User_AnchorLevel) Reset() {
	*x = User_AnchorLevel{}
	if protoimpl.UnsafeEnabled {
		mi := &file_data_User_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *User_AnchorLevel) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*User_AnchorLevel) ProtoMessage() {}

func (x *User_AnchorLevel) ProtoReflect() protoreflect.Message {
	mi := &file_data_User_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use User_AnchorLevel.ProtoReflect.Descriptor instead.
func (*User_AnchorLevel) Descriptor() ([]byte, []int) {
	return file_data_User_proto_rawDescGZIP(), []int{0, 20}
}

var File_data_User_proto protoreflect.FileDescriptor

var file_data_User_proto_rawDesc = []byte{
	0x0a, 0x0f, 0x64, 0x61, 0x74, 0x61, 0x2f, 0x55, 0x73, 0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x12, 0x0b, 0x74, 0x69, 0x6b, 0x74, 0x6f, 0x6b, 0x5f, 0x68, 0x61, 0x63, 0x6b, 0x1a, 0x10,
	0x64, 0x61, 0x74, 0x61, 0x2f, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x22, 0xba, 0x29, 0x0a, 0x04, 0x55, 0x73, 0x65, 0x72, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x70,
	0x72, 0x65, 0x63, 0x61, 0x74, 0x65, 0x64, 0x31, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b,
	0x64, 0x65, 0x70, 0x72, 0x65, 0x63, 0x61, 0x74, 0x65, 0x64, 0x31, 0x12, 0x20, 0x0a, 0x0b, 0x64,
	0x65, 0x70, 0x72, 0x65, 0x63, 0x61, 0x74, 0x65, 0x64, 0x32, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x0b, 0x64, 0x65, 0x70, 0x72, 0x65, 0x63, 0x61, 0x74, 0x65, 0x64, 0x32, 0x12, 0x20, 0x0a,
	0x0b, 0x64, 0x65, 0x70, 0x72, 0x65, 0x63, 0x61, 0x74, 0x65, 0x64, 0x33, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x0b, 0x64, 0x65, 0x70, 0x72, 0x65, 0x63, 0x61, 0x74, 0x65, 0x64, 0x33, 0x12,
	0x20, 0x0a, 0x0b, 0x64, 0x65, 0x70, 0x72, 0x65, 0x63, 0x61, 0x74, 0x65, 0x64, 0x34, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x64, 0x65, 0x70, 0x72, 0x65, 0x63, 0x61, 0x74, 0x65, 0x64,
	0x34, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x70, 0x72, 0x65, 0x63, 0x61, 0x74, 0x65, 0x64, 0x35,
	0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x70, 0x72, 0x65, 0x63, 0x61, 0x74,
	0x65, 0x64, 0x35, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x70, 0x72, 0x65, 0x63, 0x61, 0x74, 0x65,
	0x64, 0x36, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x64, 0x65, 0x70, 0x72, 0x65, 0x63,
	0x61, 0x74, 0x65, 0x64, 0x36, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x70, 0x72, 0x65, 0x63, 0x61,
	0x74, 0x65, 0x64, 0x37, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x70, 0x72,
	0x65, 0x63, 0x61, 0x74, 0x65, 0x64, 0x37, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x70, 0x72, 0x65,
	0x63, 0x61, 0x74, 0x65, 0x64, 0x38, 0x18, 0x14, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x64, 0x65,
	0x70, 0x72, 0x65, 0x63, 0x61, 0x74, 0x65, 0x64, 0x38, 0x12, 0x22, 0x0a, 0x0c, 0x64, 0x65, 0x70,
	0x72, 0x65, 0x63, 0x61, 0x74, 0x65, 0x64, 0x32, 0x31, 0x18, 0x29, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x0c, 0x64, 0x65, 0x70, 0x72, 0x65, 0x63, 0x61, 0x74, 0x65, 0x64, 0x32, 0x31, 0x12, 0x1a, 0x0a,
	0x08, 0x6e, 0x69, 0x63, 0x6b, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x6e, 0x69, 0x63, 0x6b, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x27, 0x0a, 0x0f, 0x62, 0x69, 0x6f,
	0x5f, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0e, 0x62, 0x69, 0x6f, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x12, 0x35, 0x0a, 0x0c, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x5f, 0x74, 0x68, 0x75,
	0x6d, 0x62, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x74, 0x69, 0x6b, 0x74, 0x6f,
	0x6b, 0x5f, 0x68, 0x61, 0x63, 0x6b, 0x2e, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x52, 0x0b, 0x61, 0x76,
	0x61, 0x74, 0x61, 0x72, 0x54, 0x68, 0x75, 0x6d, 0x62, 0x12, 0x37, 0x0a, 0x0d, 0x61, 0x76, 0x61,
	0x74, 0x61, 0x72, 0x5f, 0x6d, 0x65, 0x64, 0x69, 0x75, 0x6d, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x12, 0x2e, 0x74, 0x69, 0x6b, 0x74, 0x6f, 0x6b, 0x5f, 0x68, 0x61, 0x63, 0x6b, 0x2e, 0x49,
	0x6d, 0x61, 0x67, 0x65, 0x52, 0x0c, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x4d, 0x65, 0x64, 0x69,
	0x75, 0x6d, 0x12, 0x35, 0x0a, 0x0c, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x5f, 0x6c, 0x61, 0x72,
	0x67, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x74, 0x69, 0x6b, 0x74, 0x6f,
	0x6b, 0x5f, 0x68, 0x61, 0x63, 0x6b, 0x2e, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x52, 0x0b, 0x61, 0x76,
	0x61, 0x74, 0x61, 0x72, 0x4c, 0x61, 0x72, 0x67, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x76, 0x65, 0x72,
	0x69, 0x66, 0x69, 0x65, 0x64, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x76, 0x65, 0x72,
	0x69, 0x66, 0x69, 0x65, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18,
	0x0f, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1f, 0x0a,
	0x0b, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x10, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1f,
	0x0a, 0x0b, 0x6d, 0x6f, 0x64, 0x69, 0x66, 0x79, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x11, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x0a, 0x6d, 0x6f, 0x64, 0x69, 0x66, 0x79, 0x54, 0x69, 0x6d, 0x65, 0x12,
	0x16, 0x0a, 0x06, 0x73, 0x65, 0x63, 0x72, 0x65, 0x74, 0x18, 0x12, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x06, 0x73, 0x65, 0x63, 0x72, 0x65, 0x74, 0x12, 0x28, 0x0a, 0x10, 0x73, 0x68, 0x61, 0x72, 0x65,
	0x5f, 0x71, 0x72, 0x63, 0x6f, 0x64, 0x65, 0x5f, 0x75, 0x72, 0x69, 0x18, 0x13, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0e, 0x73, 0x68, 0x61, 0x72, 0x65, 0x51, 0x72, 0x63, 0x6f, 0x64, 0x65, 0x55, 0x72,
	0x69, 0x12, 0x3c, 0x0a, 0x10, 0x62, 0x61, 0x64, 0x67, 0x65, 0x5f, 0x69, 0x6d, 0x61, 0x67, 0x65,
	0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x15, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x74, 0x69,
	0x6b, 0x74, 0x6f, 0x6b, 0x5f, 0x68, 0x61, 0x63, 0x6b, 0x2e, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x52,
	0x0e, 0x62, 0x61, 0x64, 0x67, 0x65, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x12,
	0x3d, 0x0a, 0x0b, 0x66, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x16,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x74, 0x69, 0x6b, 0x74, 0x6f, 0x6b, 0x5f, 0x68, 0x61,
	0x63, 0x6b, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x2e, 0x46, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x49, 0x6e,
	0x66, 0x6f, 0x52, 0x0a, 0x66, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x37,
	0x0a, 0x09, 0x70, 0x61, 0x79, 0x5f, 0x67, 0x72, 0x61, 0x64, 0x65, 0x18, 0x17, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1a, 0x2e, 0x74, 0x69, 0x6b, 0x74, 0x6f, 0x6b, 0x5f, 0x68, 0x61, 0x63, 0x6b, 0x2e,
	0x55, 0x73, 0x65, 0x72, 0x2e, 0x50, 0x61, 0x79, 0x47, 0x72, 0x61, 0x64, 0x65, 0x52, 0x08, 0x70,
	0x61, 0x79, 0x47, 0x72, 0x61, 0x64, 0x65, 0x12, 0x37, 0x0a, 0x09, 0x66, 0x61, 0x6e, 0x73, 0x5f,
	0x63, 0x6c, 0x75, 0x62, 0x18, 0x18, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x74, 0x69, 0x6b,
	0x74, 0x6f, 0x6b, 0x5f, 0x68, 0x61, 0x63, 0x6b, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x2e, 0x46, 0x61,
	0x6e, 0x73, 0x43, 0x6c, 0x75, 0x62, 0x52, 0x08, 0x66, 0x61, 0x6e, 0x73, 0x43, 0x6c, 0x75, 0x62,
	0x12, 0x30, 0x0a, 0x06, 0x62, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x18, 0x19, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x18, 0x2e, 0x74, 0x69, 0x6b, 0x74, 0x6f, 0x6b, 0x5f, 0x68, 0x61, 0x63, 0x6b, 0x2e, 0x55,
	0x73, 0x65, 0x72, 0x2e, 0x42, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x06, 0x62, 0x6f, 0x72, 0x64,
	0x65, 0x72, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x70, 0x65, 0x63, 0x69, 0x61, 0x6c, 0x5f, 0x69, 0x64,
	0x18, 0x1a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x70, 0x65, 0x63, 0x69, 0x61, 0x6c, 0x49,
	0x64, 0x12, 0x37, 0x0a, 0x0d, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x5f, 0x62, 0x6f, 0x72, 0x64,
	0x65, 0x72, 0x18, 0x1b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x74, 0x69, 0x6b, 0x74, 0x6f,
	0x6b, 0x5f, 0x68, 0x61, 0x63, 0x6b, 0x2e, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x52, 0x0c, 0x61, 0x76,
	0x61, 0x74, 0x61, 0x72, 0x42, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x12, 0x28, 0x0a, 0x05, 0x6d, 0x65,
	0x64, 0x61, 0x6c, 0x18, 0x1c, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x74, 0x69, 0x6b, 0x74,
	0x6f, 0x6b, 0x5f, 0x68, 0x61, 0x63, 0x6b, 0x2e, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x52, 0x05, 0x6d,
	0x65, 0x64, 0x61, 0x6c, 0x12, 0x3a, 0x0a, 0x0f, 0x72, 0x65, 0x61, 0x6c, 0x5f, 0x74, 0x69, 0x6d,
	0x65, 0x5f, 0x69, 0x63, 0x6f, 0x6e, 0x73, 0x18, 0x1d, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x12, 0x2e,
	0x74, 0x69, 0x6b, 0x74, 0x6f, 0x6b, 0x5f, 0x68, 0x61, 0x63, 0x6b, 0x2e, 0x49, 0x6d, 0x61, 0x67,
	0x65, 0x52, 0x0d, 0x72, 0x65, 0x61, 0x6c, 0x54, 0x69, 0x6d, 0x65, 0x49, 0x63, 0x6f, 0x6e, 0x73,
	0x12, 0x41, 0x0a, 0x13, 0x6e, 0x65, 0x77, 0x5f, 0x72, 0x65, 0x61, 0x6c, 0x5f, 0x74, 0x69, 0x6d,
	0x65, 0x5f, 0x69, 0x63, 0x6f, 0x6e, 0x73, 0x18, 0x1e, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x12, 0x2e,
	0x74, 0x69, 0x6b, 0x74, 0x6f, 0x6b, 0x5f, 0x68, 0x61, 0x63, 0x6b, 0x2e, 0x49, 0x6d, 0x61, 0x67,
	0x65, 0x52, 0x10, 0x6e, 0x65, 0x77, 0x52, 0x65, 0x61, 0x6c, 0x54, 0x69, 0x6d, 0x65, 0x49, 0x63,
	0x6f, 0x6e, 0x73, 0x12, 0x1c, 0x0a, 0x0a, 0x74, 0x6f, 0x70, 0x5f, 0x76, 0x69, 0x70, 0x5f, 0x6e,
	0x6f, 0x18, 0x1f, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x74, 0x6f, 0x70, 0x56, 0x69, 0x70, 0x4e,
	0x6f, 0x12, 0x37, 0x0a, 0x09, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x61, 0x74, 0x74, 0x72, 0x18, 0x20,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x74, 0x69, 0x6b, 0x74, 0x6f, 0x6b, 0x5f, 0x68, 0x61,
	0x63, 0x6b, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x41, 0x74, 0x74, 0x72,
	0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x41, 0x74, 0x74, 0x72, 0x12, 0x34, 0x0a, 0x08, 0x6f, 0x77,
	0x6e, 0x5f, 0x72, 0x6f, 0x6f, 0x6d, 0x18, 0x21, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x74,
	0x69, 0x6b, 0x74, 0x6f, 0x6b, 0x5f, 0x68, 0x61, 0x63, 0x6b, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x2e,
	0x4f, 0x77, 0x6e, 0x52, 0x6f, 0x6f, 0x6d, 0x52, 0x07, 0x6f, 0x77, 0x6e, 0x52, 0x6f, 0x6f, 0x6d,
	0x12, 0x1b, 0x0a, 0x09, 0x70, 0x61, 0x79, 0x5f, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x18, 0x22, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x08, 0x70, 0x61, 0x79, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x12, 0x21, 0x0a,
	0x0c, 0x74, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x23, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x0b, 0x74, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x43, 0x6f, 0x75, 0x6e, 0x74,
	0x12, 0x3d, 0x0a, 0x0b, 0x61, 0x6e, 0x63, 0x68, 0x6f, 0x72, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18,
	0x24, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x74, 0x69, 0x6b, 0x74, 0x6f, 0x6b, 0x5f, 0x68,
	0x61, 0x63, 0x6b, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x2e, 0x41, 0x6e, 0x63, 0x68, 0x6f, 0x72, 0x49,
	0x6e, 0x66, 0x6f, 0x52, 0x0a, 0x61, 0x6e, 0x63, 0x68, 0x6f, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x12,
	0x24, 0x0a, 0x0e, 0x6c, 0x69, 0x6e, 0x6b, 0x5f, 0x6d, 0x69, 0x63, 0x5f, 0x73, 0x74, 0x61, 0x74,
	0x73, 0x18, 0x25, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x6c, 0x69, 0x6e, 0x6b, 0x4d, 0x69, 0x63,
	0x53, 0x74, 0x61, 0x74, 0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79,
	0x5f, 0x69, 0x64, 0x18, 0x26, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x64, 0x69, 0x73, 0x70, 0x6c,
	0x61, 0x79, 0x49, 0x64, 0x12, 0x38, 0x0a, 0x18, 0x77, 0x69, 0x74, 0x68, 0x5f, 0x63, 0x6f, 0x6d,
	0x6d, 0x65, 0x72, 0x63, 0x65, 0x5f, 0x70, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e,
	0x18, 0x27, 0x20, 0x01, 0x28, 0x08, 0x52, 0x16, 0x77, 0x69, 0x74, 0x68, 0x43, 0x6f, 0x6d, 0x6d,
	0x65, 0x72, 0x63, 0x65, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x33,
	0x0a, 0x16, 0x77, 0x69, 0x74, 0x68, 0x5f, 0x66, 0x75, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x73, 0x68,
	0x6f, 0x70, 0x5f, 0x65, 0x6e, 0x74, 0x72, 0x79, 0x18, 0x28, 0x20, 0x01, 0x28, 0x08, 0x52, 0x13,
	0x77, 0x69, 0x74, 0x68, 0x46, 0x75, 0x73, 0x69, 0x6f, 0x6e, 0x53, 0x68, 0x6f, 0x70, 0x45, 0x6e,
	0x74, 0x72, 0x79, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x70, 0x72, 0x65, 0x63, 0x61, 0x74, 0x65,
	0x64, 0x39, 0x18, 0x30, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x64, 0x65, 0x70, 0x72, 0x65, 0x63,
	0x61, 0x74, 0x65, 0x64, 0x39, 0x12, 0x47, 0x0a, 0x0f, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74,
	0x79, 0x5f, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x18, 0x31, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e,
	0x2e, 0x74, 0x69, 0x6b, 0x74, 0x6f, 0x6b, 0x5f, 0x68, 0x61, 0x63, 0x6b, 0x2e, 0x55, 0x73, 0x65,
	0x72, 0x2e, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0e,
	0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x12, 0x22,
	0x0a, 0x0c, 0x64, 0x65, 0x70, 0x72, 0x65, 0x63, 0x61, 0x74, 0x65, 0x64, 0x31, 0x30, 0x18, 0x32,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x64, 0x65, 0x70, 0x72, 0x65, 0x63, 0x61, 0x74, 0x65, 0x64,
	0x31, 0x30, 0x12, 0x22, 0x0a, 0x0c, 0x64, 0x65, 0x70, 0x72, 0x65, 0x63, 0x61, 0x74, 0x65, 0x64,
	0x31, 0x31, 0x18, 0x33, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x64, 0x65, 0x70, 0x72, 0x65, 0x63,
	0x61, 0x74, 0x65, 0x64, 0x31, 0x31, 0x12, 0x37, 0x0a, 0x0d, 0x70, 0x65, 0x72, 0x73, 0x6f, 0x6e,
	0x61, 0x6c, 0x5f, 0x63, 0x61, 0x72, 0x64, 0x18, 0x34, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e,
	0x74, 0x69, 0x6b, 0x74, 0x6f, 0x6b, 0x5f, 0x68, 0x61, 0x63, 0x6b, 0x2e, 0x49, 0x6d, 0x61, 0x67,
	0x65, 0x52, 0x0c, 0x70, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x61, 0x6c, 0x43, 0x61, 0x72, 0x64, 0x12,
	0x55, 0x0a, 0x13, 0x61, 0x75, 0x74, 0x68, 0x65, 0x6e, 0x74, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x35, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x74,
	0x69, 0x6b, 0x74, 0x6f, 0x6b, 0x5f, 0x68, 0x61, 0x63, 0x6b, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x2e,
	0x41, 0x75, 0x74, 0x68, 0x65, 0x6e, 0x74, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x6e,
	0x66, 0x6f, 0x52, 0x12, 0x61, 0x75, 0x74, 0x68, 0x65, 0x6e, 0x74, 0x69, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x22, 0x0a, 0x0c, 0x64, 0x65, 0x70, 0x72, 0x65, 0x63,
	0x61, 0x74, 0x65, 0x64, 0x31, 0x32, 0x18, 0x36, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x64, 0x65,
	0x70, 0x72, 0x65, 0x63, 0x61, 0x74, 0x65, 0x64, 0x31, 0x32, 0x12, 0x22, 0x0a, 0x0c, 0x64, 0x65,
	0x70, 0x72, 0x65, 0x63, 0x61, 0x74, 0x65, 0x64, 0x31, 0x33, 0x18, 0x37, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x0c, 0x64, 0x65, 0x70, 0x72, 0x65, 0x63, 0x61, 0x74, 0x65, 0x64, 0x31, 0x33, 0x12, 0x45,
	0x0a, 0x0c, 0x64, 0x65, 0x70, 0x72, 0x65, 0x63, 0x61, 0x74, 0x65, 0x64, 0x31, 0x34, 0x18, 0x38,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x74, 0x69, 0x6b, 0x74, 0x6f, 0x6b, 0x5f, 0x68, 0x61,
	0x63, 0x6b, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x2e, 0x44, 0x65, 0x70, 0x72, 0x65, 0x63, 0x61, 0x74,
	0x65, 0x64, 0x54, 0x79, 0x70, 0x65, 0x36, 0x52, 0x0c, 0x64, 0x65, 0x70, 0x72, 0x65, 0x63, 0x61,
	0x74, 0x65, 0x64, 0x31, 0x34, 0x12, 0x47, 0x0a, 0x16, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x5f, 0x62,
	0x61, 0x64, 0x67, 0x65, 0x5f, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18,
	0x39, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x74, 0x69, 0x6b, 0x74, 0x6f, 0x6b, 0x5f, 0x68,
	0x61, 0x63, 0x6b, 0x2e, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x52, 0x13, 0x6d, 0x65, 0x64, 0x69, 0x61,
	0x42, 0x61, 0x64, 0x67, 0x65, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x22,
	0x0a, 0x0c, 0x64, 0x65, 0x70, 0x72, 0x65, 0x63, 0x61, 0x74, 0x65, 0x64, 0x31, 0x35, 0x18, 0x3a,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x64, 0x65, 0x70, 0x72, 0x65, 0x63, 0x61, 0x74, 0x65, 0x64,
	0x31, 0x35, 0x12, 0x41, 0x0a, 0x0d, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x76, 0x69, 0x70, 0x5f, 0x69,
	0x6e, 0x66, 0x6f, 0x18, 0x3b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x74, 0x69, 0x6b, 0x74,
	0x6f, 0x6b, 0x5f, 0x68, 0x61, 0x63, 0x6b, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x2e, 0x55, 0x73, 0x65,
	0x72, 0x56, 0x49, 0x50, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0b, 0x75, 0x73, 0x65, 0x72, 0x56, 0x69,
	0x70, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x3d, 0x0a, 0x1b, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x72, 0x63,
	0x65, 0x5f, 0x77, 0x65, 0x62, 0x63, 0x61, 0x73, 0x74, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x5f, 0x69, 0x64, 0x73, 0x18, 0x3c, 0x20, 0x03, 0x28, 0x03, 0x52, 0x18, 0x63, 0x6f, 0x6d, 0x6d,
	0x65, 0x72, 0x63, 0x65, 0x57, 0x65, 0x62, 0x63, 0x61, 0x73, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x49, 0x64, 0x73, 0x12, 0x39, 0x0a, 0x0b, 0x62, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x6c,
	0x69, 0x73, 0x74, 0x18, 0x3d, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x74, 0x69, 0x6b, 0x74,
	0x6f, 0x6b, 0x5f, 0x68, 0x61, 0x63, 0x6b, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x2e, 0x42, 0x6f, 0x72,
	0x64, 0x65, 0x72, 0x52, 0x0a, 0x62, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x12,
	0x4a, 0x0a, 0x10, 0x63, 0x6f, 0x6d, 0x62, 0x6f, 0x5f, 0x62, 0x61, 0x64, 0x67, 0x65, 0x5f, 0x69,
	0x6e, 0x66, 0x6f, 0x18, 0x3e, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x74, 0x69, 0x6b, 0x74,
	0x6f, 0x6b, 0x5f, 0x68, 0x61, 0x63, 0x6b, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x2e, 0x43, 0x6f, 0x6d,
	0x62, 0x6f, 0x42, 0x61, 0x64, 0x67, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0e, 0x63, 0x6f, 0x6d,
	0x62, 0x6f, 0x42, 0x61, 0x64, 0x67, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x46, 0x0a, 0x0e, 0x73,
	0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x3f, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x74, 0x69, 0x6b, 0x74, 0x6f, 0x6b, 0x5f, 0x68, 0x61, 0x63,
	0x6b, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x2e, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65,
	0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0d, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x49,
	0x6e, 0x66, 0x6f, 0x12, 0x3c, 0x0a, 0x0a, 0x62, 0x61, 0x64, 0x67, 0x65, 0x5f, 0x6c, 0x69, 0x73,
	0x74, 0x18, 0x40, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x74, 0x69, 0x6b, 0x74, 0x6f, 0x6b,
	0x5f, 0x68, 0x61, 0x63, 0x6b, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x2e, 0x42, 0x61, 0x64, 0x67, 0x65,
	0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x52, 0x09, 0x62, 0x61, 0x64, 0x67, 0x65, 0x4c, 0x69, 0x73,
	0x74, 0x12, 0x26, 0x0a, 0x0f, 0x6d, 0x69, 0x6e, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x5f, 0x6c,
	0x61, 0x62, 0x65, 0x6c, 0x18, 0x41, 0x20, 0x03, 0x28, 0x03, 0x52, 0x0d, 0x6d, 0x69, 0x6e, 0x74,
	0x54, 0x79, 0x70, 0x65, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x12, 0x3f, 0x0a, 0x0e, 0x66, 0x61, 0x6e,
	0x73, 0x5f, 0x63, 0x6c, 0x75, 0x62, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x42, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x19, 0x2e, 0x74, 0x69, 0x6b, 0x74, 0x6f, 0x6b, 0x5f, 0x68, 0x61, 0x63, 0x6b, 0x2e,
	0x46, 0x61, 0x6e, 0x73, 0x43, 0x6c, 0x75, 0x62, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0c, 0x66, 0x61,
	0x6e, 0x73, 0x43, 0x6c, 0x75, 0x62, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x23, 0x0a, 0x0c, 0x64, 0x65,
	0x70, 0x72, 0x65, 0x63, 0x61, 0x74, 0x65, 0x64, 0x31, 0x39, 0x18, 0xe9, 0x07, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x0c, 0x64, 0x65, 0x70, 0x72, 0x65, 0x63, 0x61, 0x74, 0x65, 0x64, 0x31, 0x39, 0x12,
	0x34, 0x0a, 0x16, 0x61, 0x6c, 0x6c, 0x6f, 0x77, 0x5f, 0x66, 0x69, 0x6e, 0x64, 0x5f, 0x62, 0x79,
	0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x73, 0x18, 0xea, 0x07, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x13, 0x61, 0x6c, 0x6c, 0x6f, 0x77, 0x46, 0x69, 0x6e, 0x64, 0x42, 0x79, 0x43, 0x6f, 0x6e,
	0x74, 0x61, 0x63, 0x74, 0x73, 0x12, 0x3e, 0x0a, 0x1b, 0x61, 0x6c, 0x6c, 0x6f, 0x77, 0x5f, 0x6f,
	0x74, 0x68, 0x65, 0x72, 0x73, 0x5f, 0x64, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x5f, 0x76,
	0x69, 0x64, 0x65, 0x6f, 0x18, 0xeb, 0x07, 0x20, 0x01, 0x28, 0x08, 0x52, 0x18, 0x61, 0x6c, 0x6c,
	0x6f, 0x77, 0x4f, 0x74, 0x68, 0x65, 0x72, 0x73, 0x44, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64,
	0x56, 0x69, 0x64, 0x65, 0x6f, 0x12, 0x56, 0x0a, 0x28, 0x61, 0x6c, 0x6c, 0x6f, 0x77, 0x5f, 0x6f,
	0x74, 0x68, 0x65, 0x72, 0x73, 0x5f, 0x64, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x5f, 0x77,
	0x68, 0x65, 0x6e, 0x5f, 0x73, 0x68, 0x61, 0x72, 0x69, 0x6e, 0x67, 0x5f, 0x76, 0x69, 0x64, 0x65,
	0x6f, 0x18, 0xec, 0x07, 0x20, 0x01, 0x28, 0x08, 0x52, 0x23, 0x61, 0x6c, 0x6c, 0x6f, 0x77, 0x4f,
	0x74, 0x68, 0x65, 0x72, 0x73, 0x44, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x57, 0x68, 0x65,
	0x6e, 0x53, 0x68, 0x61, 0x72, 0x69, 0x6e, 0x67, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x12, 0x38, 0x0a,
	0x18, 0x61, 0x6c, 0x6c, 0x6f, 0x77, 0x5f, 0x73, 0x68, 0x61, 0x72, 0x65, 0x5f, 0x73, 0x68, 0x6f,
	0x77, 0x5f, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x18, 0xed, 0x07, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x15, 0x61, 0x6c, 0x6c, 0x6f, 0x77, 0x53, 0x68, 0x61, 0x72, 0x65, 0x53, 0x68, 0x6f, 0x77,
	0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x12, 0x30, 0x0a, 0x14, 0x61, 0x6c, 0x6c, 0x6f, 0x77,
	0x5f, 0x73, 0x68, 0x6f, 0x77, 0x5f, 0x69, 0x6e, 0x5f, 0x67, 0x6f, 0x73, 0x73, 0x69, 0x70, 0x18,
	0xee, 0x07, 0x20, 0x01, 0x28, 0x08, 0x52, 0x11, 0x61, 0x6c, 0x6c, 0x6f, 0x77, 0x53, 0x68, 0x6f,
	0x77, 0x49, 0x6e, 0x47, 0x6f, 0x73, 0x73, 0x69, 0x70, 0x12, 0x30, 0x0a, 0x14, 0x61, 0x6c, 0x6c,
	0x6f, 0x77, 0x5f, 0x73, 0x68, 0x6f, 0x77, 0x5f, 0x6d, 0x79, 0x5f, 0x61, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x18, 0xef, 0x07, 0x20, 0x01, 0x28, 0x08, 0x52, 0x11, 0x61, 0x6c, 0x6c, 0x6f, 0x77, 0x53,
	0x68, 0x6f, 0x77, 0x4d, 0x79, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x33, 0x0a, 0x15, 0x61,
	0x6c, 0x6c, 0x6f, 0x77, 0x5f, 0x73, 0x74, 0x72, 0x61, 0x6e, 0x67, 0x65, 0x5f, 0x63, 0x6f, 0x6d,
	0x6d, 0x65, 0x6e, 0x74, 0x18, 0xf0, 0x07, 0x20, 0x01, 0x28, 0x08, 0x52, 0x13, 0x61, 0x6c, 0x6c,
	0x6f, 0x77, 0x53, 0x74, 0x72, 0x61, 0x6e, 0x67, 0x65, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74,
	0x12, 0x39, 0x0a, 0x18, 0x61, 0x6c, 0x6c, 0x6f, 0x77, 0x5f, 0x75, 0x6e, 0x66, 0x6f, 0x6c, 0x6c,
	0x6f, 0x77, 0x65, 0x72, 0x5f, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0xf1, 0x07, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x16, 0x61, 0x6c, 0x6c, 0x6f, 0x77, 0x55, 0x6e, 0x66, 0x6f, 0x6c, 0x6c,
	0x6f, 0x77, 0x65, 0x72, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x2b, 0x0a, 0x11, 0x61,
	0x6c, 0x6c, 0x6f, 0x77, 0x5f, 0x75, 0x73, 0x65, 0x5f, 0x6c, 0x69, 0x6e, 0x6b, 0x6d, 0x69, 0x63,
	0x18, 0xf2, 0x07, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0f, 0x61, 0x6c, 0x6c, 0x6f, 0x77, 0x55, 0x73,
	0x65, 0x4c, 0x69, 0x6e, 0x6b, 0x6d, 0x69, 0x63, 0x12, 0x41, 0x0a, 0x0c, 0x61, 0x6e, 0x63, 0x68,
	0x6f, 0x72, 0x5f, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x18, 0xf3, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1d, 0x2e, 0x74, 0x69, 0x6b, 0x74, 0x6f, 0x6b, 0x5f, 0x68, 0x61, 0x63, 0x6b, 0x2e, 0x55, 0x73,
	0x65, 0x72, 0x2e, 0x41, 0x6e, 0x63, 0x68, 0x6f, 0x72, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x52, 0x0b,
	0x61, 0x6e, 0x63, 0x68, 0x6f, 0x72, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x12, 0x1d, 0x0a, 0x0a, 0x62,
	0x67, 0x5f, 0x69, 0x6d, 0x67, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0xf5, 0x07, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x62, 0x67, 0x49, 0x6d, 0x67, 0x55, 0x72, 0x6c, 0x12, 0x23, 0x0a, 0x0c, 0x64, 0x65,
	0x70, 0x72, 0x65, 0x63, 0x61, 0x74, 0x65, 0x64, 0x31, 0x38, 0x18, 0xf6, 0x07, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0c, 0x64, 0x65, 0x70, 0x72, 0x65, 0x63, 0x61, 0x74, 0x65, 0x64, 0x31, 0x38, 0x12,
	0x23, 0x0a, 0x0c, 0x64, 0x65, 0x70, 0x72, 0x65, 0x63, 0x61, 0x74, 0x65, 0x64, 0x31, 0x36, 0x18,
	0xf7, 0x07, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0c, 0x64, 0x65, 0x70, 0x72, 0x65, 0x63, 0x61, 0x74,
	0x65, 0x64, 0x31, 0x36, 0x12, 0x22, 0x0a, 0x0c, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x5f, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x18, 0xf8, 0x07, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x62, 0x6c, 0x6f,
	0x63, 0x6b, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x2a, 0x0a, 0x10, 0x63, 0x6f, 0x6d, 0x6d,
	0x65, 0x6e, 0x74, 0x5f, 0x72, 0x65, 0x73, 0x74, 0x72, 0x69, 0x63, 0x74, 0x18, 0xf9, 0x07, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x0f, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x74,
	0x72, 0x69, 0x63, 0x74, 0x12, 0x25, 0x0a, 0x0d, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x65, 0x6c, 0x6c,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0xfa, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x63, 0x6f,
	0x6e, 0x73, 0x74, 0x65, 0x6c, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x24, 0x0a, 0x0d, 0x64,
	0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x5f, 0x69, 0x63, 0x68, 0x61, 0x74, 0x18, 0xfb, 0x07, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x0c, 0x64, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x49, 0x63, 0x68, 0x61,
	0x74, 0x12, 0x29, 0x0a, 0x10, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x5f, 0x69, 0x63, 0x68, 0x61,
	0x74, 0x5f, 0x69, 0x6d, 0x67, 0x18, 0xfc, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0e, 0x65, 0x6e,
	0x61, 0x62, 0x6c, 0x65, 0x49, 0x63, 0x68, 0x61, 0x74, 0x49, 0x6d, 0x67, 0x12, 0x11, 0x0a, 0x03,
	0x65, 0x78, 0x70, 0x18, 0xfd, 0x07, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x65, 0x78, 0x70, 0x12,
	0x29, 0x0a, 0x10, 0x66, 0x61, 0x6e, 0x5f, 0x74, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x5f, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x18, 0xfe, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0e, 0x66, 0x61, 0x6e, 0x54,
	0x69, 0x63, 0x6b, 0x65, 0x74, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x2d, 0x0a, 0x12, 0x66, 0x6f,
	0x6c, 0x64, 0x5f, 0x73, 0x74, 0x72, 0x61, 0x6e, 0x67, 0x65, 0x72, 0x5f, 0x63, 0x68, 0x61, 0x74,
	0x18, 0xff, 0x07, 0x20, 0x01, 0x28, 0x08, 0x52, 0x10, 0x66, 0x6f, 0x6c, 0x64, 0x53, 0x74, 0x72,
	0x61, 0x6e, 0x67, 0x65, 0x72, 0x43, 0x68, 0x61, 0x74, 0x12, 0x24, 0x0a, 0x0d, 0x66, 0x6f, 0x6c,
	0x6c, 0x6f, 0x77, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x80, 0x08, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x0c, 0x66, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12,
	0x23, 0x0a, 0x0c, 0x64, 0x65, 0x70, 0x72, 0x65, 0x63, 0x61, 0x74, 0x65, 0x64, 0x32, 0x38, 0x18,
	0x81, 0x08, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0c, 0x64, 0x65, 0x70, 0x72, 0x65, 0x63, 0x61, 0x74,
	0x65, 0x64, 0x32, 0x38, 0x12, 0x23, 0x0a, 0x0c, 0x64, 0x65, 0x70, 0x72, 0x65, 0x63, 0x61, 0x74,
	0x65, 0x64, 0x32, 0x39, 0x18, 0x82, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x64, 0x65, 0x70,
	0x72, 0x65, 0x63, 0x61, 0x74, 0x65, 0x64, 0x32, 0x39, 0x12, 0x2f, 0x0a, 0x13, 0x69, 0x63, 0x68,
	0x61, 0x74, 0x5f, 0x72, 0x65, 0x73, 0x74, 0x72, 0x69, 0x63, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65,
	0x18, 0x83, 0x08, 0x20, 0x01, 0x28, 0x05, 0x52, 0x11, 0x69, 0x63, 0x68, 0x61, 0x74, 0x52, 0x65,
	0x73, 0x74, 0x72, 0x69, 0x63, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x69, 0x64,
	0x5f, 0x73, 0x74, 0x72, 0x18, 0x84, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x69, 0x64, 0x53,
	0x74, 0x72, 0x12, 0x20, 0x0a, 0x0b, 0x69, 0x73, 0x5f, 0x66, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x65,
	0x72, 0x18, 0x85, 0x08, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x69, 0x73, 0x46, 0x6f, 0x6c, 0x6c,
	0x6f, 0x77, 0x65, 0x72, 0x12, 0x22, 0x0a, 0x0c, 0x69, 0x73, 0x5f, 0x66, 0x6f, 0x6c, 0x6c, 0x6f,
	0x77, 0x69, 0x6e, 0x67, 0x18, 0x86, 0x08, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0b, 0x69, 0x73, 0x46,
	0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x69, 0x6e, 0x67, 0x12, 0x2d, 0x0a, 0x12, 0x6e, 0x65, 0x65, 0x64,
	0x5f, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x67, 0x75, 0x69, 0x64, 0x65, 0x18, 0x87,
	0x08, 0x20, 0x01, 0x28, 0x08, 0x52, 0x10, 0x6e, 0x65, 0x65, 0x64, 0x50, 0x72, 0x6f, 0x66, 0x69,
	0x6c, 0x65, 0x47, 0x75, 0x69, 0x64, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x70, 0x61, 0x79, 0x5f, 0x73,
	0x63, 0x6f, 0x72, 0x65, 0x73, 0x18, 0x88, 0x08, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x70, 0x61,
	0x79, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x73, 0x12, 0x2f, 0x0a, 0x13, 0x70, 0x75, 0x73, 0x68, 0x5f,
	0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x89,
	0x08, 0x20, 0x01, 0x28, 0x08, 0x52, 0x11, 0x70, 0x75, 0x73, 0x68, 0x43, 0x6f, 0x6d, 0x6d, 0x65,
	0x6e, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x70, 0x75, 0x73, 0x68,
	0x5f, 0x64, 0x69, 0x67, 0x67, 0x18, 0x8a, 0x08, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x70, 0x75,
	0x73, 0x68, 0x44, 0x69, 0x67, 0x67, 0x12, 0x20, 0x0a, 0x0b, 0x70, 0x75, 0x73, 0x68, 0x5f, 0x66,
	0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x18, 0x8b, 0x08, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x70, 0x75,
	0x73, 0x68, 0x46, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x12, 0x2d, 0x0a, 0x12, 0x70, 0x75, 0x73, 0x68,
	0x5f, 0x66, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x5f, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x8c,
	0x08, 0x20, 0x01, 0x28, 0x08, 0x52, 0x10, 0x70, 0x75, 0x73, 0x68, 0x46, 0x72, 0x69, 0x65, 0x6e,
	0x64, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1e, 0x0a, 0x0a, 0x70, 0x75, 0x73, 0x68, 0x5f,
	0x69, 0x63, 0x68, 0x61, 0x74, 0x18, 0x8d, 0x08, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x70, 0x75,
	0x73, 0x68, 0x49, 0x63, 0x68, 0x61, 0x74, 0x12, 0x20, 0x0a, 0x0b, 0x70, 0x75, 0x73, 0x68, 0x5f,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x8e, 0x08, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x70,
	0x75, 0x73, 0x68, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x27, 0x0a, 0x0f, 0x70, 0x75, 0x73,
	0x68, 0x5f, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x5f, 0x70, 0x6f, 0x73, 0x74, 0x18, 0x8f, 0x08, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x0d, 0x70, 0x75, 0x73, 0x68, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x50, 0x6f,
	0x73, 0x74, 0x12, 0x31, 0x0a, 0x14, 0x70, 0x75, 0x73, 0x68, 0x5f, 0x76, 0x69, 0x64, 0x65, 0x6f,
	0x5f, 0x72, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x18, 0x90, 0x08, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x12, 0x70, 0x75, 0x73, 0x68, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x52, 0x65, 0x63, 0x6f,
	0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x12, 0x32, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x73, 0x18, 0x91,
	0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x74, 0x69, 0x6b, 0x74, 0x6f, 0x6b, 0x5f, 0x68,
	0x61, 0x63, 0x6b, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x53, 0x74, 0x61,
	0x74, 0x73, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x73, 0x12, 0x23, 0x0a, 0x0c, 0x64, 0x65, 0x70,
	0x72, 0x65, 0x63, 0x61, 0x74, 0x65, 0x64, 0x31, 0x37, 0x18, 0x92, 0x08, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x0c, 0x64, 0x65, 0x70, 0x72, 0x65, 0x63, 0x61, 0x74, 0x65, 0x64, 0x31, 0x37, 0x12, 0x28,
	0x0a, 0x0f, 0x76, 0x65, 0x72, 0x69, 0x66, 0x69, 0x65, 0x64, 0x5f, 0x72, 0x65, 0x61, 0x73, 0x6f,
	0x6e, 0x18, 0x93, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x76, 0x65, 0x72, 0x69, 0x66, 0x69,
	0x65, 0x64, 0x52, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x12, 0x44, 0x0a, 0x1e, 0x77, 0x69, 0x74, 0x68,
	0x5f, 0x63, 0x61, 0x72, 0x5f, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x5f,
	0x70, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x94, 0x08, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x1b, 0x77, 0x69, 0x74, 0x68, 0x43, 0x61, 0x72, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65,
	0x6d, 0x65, 0x6e, 0x74, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x50,
	0x0a, 0x13, 0x75, 0x70, 0x63, 0x6f, 0x6d, 0x69, 0x6e, 0x67, 0x5f, 0x65, 0x76, 0x65, 0x6e, 0x74,
	0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x95, 0x08, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x74,
	0x69, 0x6b, 0x74, 0x6f, 0x6b, 0x5f, 0x68, 0x61, 0x63, 0x6b, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x2e,
	0x4c, 0x69, 0x76, 0x65, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x11, 0x75,
	0x70, 0x63, 0x6f, 0x6d, 0x69, 0x6e, 0x67, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x4c, 0x69, 0x73, 0x74,
	0x12, 0x1c, 0x0a, 0x09, 0x73, 0x63, 0x6d, 0x5f, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x18, 0x96, 0x08,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x73, 0x63, 0x6d, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x12, 0x53,
	0x0a, 0x12, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x72, 0x63, 0x65, 0x5f, 0x65, 0x6e, 0x74, 0x72,
	0x61, 0x6e, 0x63, 0x65, 0x18, 0x97, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x74, 0x69,
	0x6b, 0x74, 0x6f, 0x6b, 0x5f, 0x68, 0x61, 0x63, 0x6b, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x2e, 0x45,
	0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x72, 0x63, 0x65, 0x45, 0x6e, 0x74, 0x72, 0x61, 0x6e, 0x63, 0x65,
	0x52, 0x11, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x72, 0x63, 0x65, 0x45, 0x6e, 0x74, 0x72, 0x61,
	0x6e, 0x63, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x69, 0x73, 0x5f, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x18,
	0x98, 0x08, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x69, 0x73, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x12,
	0x22, 0x0a, 0x0c, 0x69, 0x73, 0x5f, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x18,
	0xc2, 0x08, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0b, 0x69, 0x73, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72,
	0x69, 0x62, 0x65, 0x1a, 0x0c, 0x0a, 0x0a, 0x46, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x49, 0x6e, 0x66,
	0x6f, 0x1a, 0x0a, 0x0a, 0x08, 0x50, 0x61, 0x79, 0x47, 0x72, 0x61, 0x64, 0x65, 0x1a, 0x0a, 0x0a,
	0x08, 0x46, 0x61, 0x6e, 0x73, 0x43, 0x6c, 0x75, 0x62, 0x1a, 0x08, 0x0a, 0x06, 0x42, 0x6f, 0x72,
	0x64, 0x65, 0x72, 0x1a, 0x0a, 0x0a, 0x08, 0x55, 0x73, 0x65, 0x72, 0x41, 0x74, 0x74, 0x72, 0x1a,
	0x09, 0x0a, 0x07, 0x4f, 0x77, 0x6e, 0x52, 0x6f, 0x6f, 0x6d, 0x1a, 0x0c, 0x0a, 0x0a, 0x41, 0x6e,
	0x63, 0x68, 0x6f, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x1a, 0x0d, 0x0a, 0x0b, 0x55, 0x73, 0x65, 0x72,
	0x56, 0x49, 0x50, 0x49, 0x6e, 0x66, 0x6f, 0x1a, 0x10, 0x0a, 0x0e, 0x43, 0x6f, 0x6d, 0x62, 0x6f,
	0x42, 0x61, 0x64, 0x67, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x1a, 0x0f, 0x0a, 0x0d, 0x53, 0x75, 0x62,
	0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x1a, 0x0d, 0x0a, 0x0b, 0x42, 0x61,
	0x64, 0x67, 0x65, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x1a, 0x0e, 0x0a, 0x0c, 0x41, 0x63, 0x74,
	0x69, 0x76, 0x69, 0x74, 0x79, 0x49, 0x6e, 0x66, 0x6f, 0x1a, 0x11, 0x0a, 0x0f, 0x44, 0x65, 0x70,
	0x72, 0x65, 0x63, 0x61, 0x74, 0x65, 0x64, 0x54, 0x79, 0x70, 0x65, 0x31, 0x1a, 0x11, 0x0a, 0x0f,
	0x44, 0x65, 0x70, 0x72, 0x65, 0x63, 0x61, 0x74, 0x65, 0x64, 0x54, 0x79, 0x70, 0x65, 0x34, 0x1a,
	0x11, 0x0a, 0x0f, 0x44, 0x65, 0x70, 0x72, 0x65, 0x63, 0x61, 0x74, 0x65, 0x64, 0x54, 0x79, 0x70,
	0x65, 0x35, 0x1a, 0x11, 0x0a, 0x0f, 0x44, 0x65, 0x70, 0x72, 0x65, 0x63, 0x61, 0x74, 0x65, 0x64,
	0x54, 0x79, 0x70, 0x65, 0x36, 0x1a, 0x14, 0x0a, 0x12, 0x41, 0x75, 0x74, 0x68, 0x65, 0x6e, 0x74,
	0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x1a, 0x0f, 0x0a, 0x0d, 0x4c,
	0x69, 0x76, 0x65, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x1a, 0x13, 0x0a, 0x11,
	0x45, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x72, 0x63, 0x65, 0x45, 0x6e, 0x74, 0x72, 0x61, 0x6e, 0x63,
	0x65, 0x1a, 0x0b, 0x0a, 0x09, 0x55, 0x73, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x73, 0x1a, 0x0d,
	0x0a, 0x0b, 0x41, 0x6e, 0x63, 0x68, 0x6f, 0x72, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x22, 0xb6, 0x01,
	0x0a, 0x0c, 0x46, 0x61, 0x6e, 0x73, 0x43, 0x6c, 0x75, 0x62, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x1f,
	0x0a, 0x0b, 0x69, 0x73, 0x5f, 0x73, 0x6c, 0x65, 0x65, 0x70, 0x69, 0x6e, 0x67, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x0a, 0x69, 0x73, 0x53, 0x6c, 0x65, 0x65, 0x70, 0x69, 0x6e, 0x67, 0x12,
	0x1d, 0x0a, 0x0a, 0x66, 0x61, 0x6e, 0x73, 0x5f, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x09, 0x66, 0x61, 0x6e, 0x73, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x12, 0x1d,
	0x0a, 0x0a, 0x66, 0x61, 0x6e, 0x73, 0x5f, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x09, 0x66, 0x61, 0x6e, 0x73, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x12, 0x28, 0x0a,
	0x05, 0x62, 0x61, 0x64, 0x67, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x74,
	0x69, 0x6b, 0x74, 0x6f, 0x6b, 0x5f, 0x68, 0x61, 0x63, 0x6b, 0x2e, 0x49, 0x6d, 0x61, 0x67, 0x65,
	0x52, 0x05, 0x62, 0x61, 0x64, 0x67, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x66, 0x61, 0x6e, 0x73, 0x5f,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x66, 0x61, 0x6e,
	0x73, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x42, 0x65, 0x0a, 0x45, 0x63, 0x6f, 0x6f, 0x6c, 0x2e, 0x73,
	0x63, 0x78, 0x2e, 0x6c, 0x69, 0x76, 0x65, 0x5f, 0x72, 0x6f, 0x6f, 0x6d, 0x5f, 0x77, 0x61, 0x74,
	0x63, 0x68, 0x65, 0x72, 0x2e, 0x69, 0x6d, 0x70, 0x6c, 0x2e, 0x74, 0x69, 0x6b, 0x74, 0x6f, 0x6b,
	0x5f, 0x68, 0x61, 0x63, 0x6b, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x5f, 0x65, 0x6e, 0x74, 0x69,
	0x74, 0x79, 0x2e, 0x77, 0x65, 0x62, 0x63, 0x61, 0x73, 0x74, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x50,
	0x01, 0x5a, 0x1a, 0x74, 0x69, 0x6b, 0x74, 0x6f, 0x6b, 0x5f, 0x68, 0x61, 0x63, 0x6b, 0x2f, 0x67,
	0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x64, 0x2f, 0x64, 0x61, 0x74, 0x61, 0x62, 0x06, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_data_User_proto_rawDescOnce sync.Once
	file_data_User_proto_rawDescData = file_data_User_proto_rawDesc
)

func file_data_User_proto_rawDescGZIP() []byte {
	file_data_User_proto_rawDescOnce.Do(func() {
		file_data_User_proto_rawDescData = protoimpl.X.CompressGZIP(file_data_User_proto_rawDescData)
	})
	return file_data_User_proto_rawDescData
}

var file_data_User_proto_msgTypes = make([]protoimpl.MessageInfo, 23)
var file_data_User_proto_goTypes = []interface{}{
	(*User)(nil),                    // 0: tiktok_hack.User
	(*FansClubInfo)(nil),            // 1: tiktok_hack.FansClubInfo
	(*User_FollowInfo)(nil),         // 2: tiktok_hack.User.FollowInfo
	(*User_PayGrade)(nil),           // 3: tiktok_hack.User.PayGrade
	(*User_FansClub)(nil),           // 4: tiktok_hack.User.FansClub
	(*User_Border)(nil),             // 5: tiktok_hack.User.Border
	(*User_UserAttr)(nil),           // 6: tiktok_hack.User.UserAttr
	(*User_OwnRoom)(nil),            // 7: tiktok_hack.User.OwnRoom
	(*User_AnchorInfo)(nil),         // 8: tiktok_hack.User.AnchorInfo
	(*User_UserVIPInfo)(nil),        // 9: tiktok_hack.User.UserVIPInfo
	(*User_ComboBadgeInfo)(nil),     // 10: tiktok_hack.User.ComboBadgeInfo
	(*User_SubscribeInfo)(nil),      // 11: tiktok_hack.User.SubscribeInfo
	(*User_BadgeStruct)(nil),        // 12: tiktok_hack.User.BadgeStruct
	(*User_ActivityInfo)(nil),       // 13: tiktok_hack.User.ActivityInfo
	(*User_DeprecatedType1)(nil),    // 14: tiktok_hack.User.DeprecatedType1
	(*User_DeprecatedType4)(nil),    // 15: tiktok_hack.User.DeprecatedType4
	(*User_DeprecatedType5)(nil),    // 16: tiktok_hack.User.DeprecatedType5
	(*User_DeprecatedType6)(nil),    // 17: tiktok_hack.User.DeprecatedType6
	(*User_AuthenticationInfo)(nil), // 18: tiktok_hack.User.AuthenticationInfo
	(*User_LiveEventInfo)(nil),      // 19: tiktok_hack.User.LiveEventInfo
	(*User_EcommerceEntrance)(nil),  // 20: tiktok_hack.User.EcommerceEntrance
	(*User_UserStats)(nil),          // 21: tiktok_hack.User.UserStats
	(*User_AnchorLevel)(nil),        // 22: tiktok_hack.User.AnchorLevel
	(*Image)(nil),                   // 23: tiktok_hack.Image
}
var file_data_User_proto_depIdxs = []int32{
	23, // 0: tiktok_hack.User.avatar_thumb:type_name -> tiktok_hack.Image
	23, // 1: tiktok_hack.User.avatar_medium:type_name -> tiktok_hack.Image
	23, // 2: tiktok_hack.User.avatar_large:type_name -> tiktok_hack.Image
	23, // 3: tiktok_hack.User.badge_image_list:type_name -> tiktok_hack.Image
	2,  // 4: tiktok_hack.User.follow_info:type_name -> tiktok_hack.User.FollowInfo
	3,  // 5: tiktok_hack.User.pay_grade:type_name -> tiktok_hack.User.PayGrade
	4,  // 6: tiktok_hack.User.fans_club:type_name -> tiktok_hack.User.FansClub
	5,  // 7: tiktok_hack.User.border:type_name -> tiktok_hack.User.Border
	23, // 8: tiktok_hack.User.avatar_border:type_name -> tiktok_hack.Image
	23, // 9: tiktok_hack.User.medal:type_name -> tiktok_hack.Image
	23, // 10: tiktok_hack.User.real_time_icons:type_name -> tiktok_hack.Image
	23, // 11: tiktok_hack.User.new_real_time_icons:type_name -> tiktok_hack.Image
	6,  // 12: tiktok_hack.User.user_attr:type_name -> tiktok_hack.User.UserAttr
	7,  // 13: tiktok_hack.User.own_room:type_name -> tiktok_hack.User.OwnRoom
	8,  // 14: tiktok_hack.User.anchor_info:type_name -> tiktok_hack.User.AnchorInfo
	13, // 15: tiktok_hack.User.activity_reward:type_name -> tiktok_hack.User.ActivityInfo
	23, // 16: tiktok_hack.User.personal_card:type_name -> tiktok_hack.Image
	18, // 17: tiktok_hack.User.authentication_info:type_name -> tiktok_hack.User.AuthenticationInfo
	17, // 18: tiktok_hack.User.deprecated14:type_name -> tiktok_hack.User.DeprecatedType6
	23, // 19: tiktok_hack.User.media_badge_image_list:type_name -> tiktok_hack.Image
	9,  // 20: tiktok_hack.User.user_vip_info:type_name -> tiktok_hack.User.UserVIPInfo
	5,  // 21: tiktok_hack.User.border_list:type_name -> tiktok_hack.User.Border
	10, // 22: tiktok_hack.User.combo_badge_info:type_name -> tiktok_hack.User.ComboBadgeInfo
	11, // 23: tiktok_hack.User.subscribe_info:type_name -> tiktok_hack.User.SubscribeInfo
	12, // 24: tiktok_hack.User.badge_list:type_name -> tiktok_hack.User.BadgeStruct
	1,  // 25: tiktok_hack.User.fans_club_info:type_name -> tiktok_hack.FansClubInfo
	22, // 26: tiktok_hack.User.anchor_level:type_name -> tiktok_hack.User.AnchorLevel
	21, // 27: tiktok_hack.User.stats:type_name -> tiktok_hack.User.UserStats
	19, // 28: tiktok_hack.User.upcoming_event_list:type_name -> tiktok_hack.User.LiveEventInfo
	20, // 29: tiktok_hack.User.ecommerce_entrance:type_name -> tiktok_hack.User.EcommerceEntrance
	23, // 30: tiktok_hack.FansClubInfo.badge:type_name -> tiktok_hack.Image
	31, // [31:31] is the sub-list for method output_type
	31, // [31:31] is the sub-list for method input_type
	31, // [31:31] is the sub-list for extension type_name
	31, // [31:31] is the sub-list for extension extendee
	0,  // [0:31] is the sub-list for field type_name
}

func init() { file_data_User_proto_init() }
func file_data_User_proto_init() {
	if File_data_User_proto != nil {
		return
	}
	file_data_Image_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_data_User_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*User); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_data_User_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FansClubInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_data_User_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*User_FollowInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_data_User_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*User_PayGrade); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_data_User_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*User_FansClub); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_data_User_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*User_Border); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_data_User_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*User_UserAttr); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_data_User_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*User_OwnRoom); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_data_User_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*User_AnchorInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_data_User_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*User_UserVIPInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_data_User_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*User_ComboBadgeInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_data_User_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*User_SubscribeInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_data_User_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*User_BadgeStruct); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_data_User_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*User_ActivityInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_data_User_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*User_DeprecatedType1); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_data_User_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*User_DeprecatedType4); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_data_User_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*User_DeprecatedType5); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_data_User_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*User_DeprecatedType6); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_data_User_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*User_AuthenticationInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_data_User_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*User_LiveEventInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_data_User_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*User_EcommerceEntrance); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_data_User_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*User_UserStats); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_data_User_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*User_AnchorLevel); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_data_User_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   23,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_data_User_proto_goTypes,
		DependencyIndexes: file_data_User_proto_depIdxs,
		MessageInfos:      file_data_User_proto_msgTypes,
	}.Build()
	File_data_User_proto = out.File
	file_data_User_proto_rawDesc = nil
	file_data_User_proto_goTypes = nil
	file_data_User_proto_depIdxs = nil
}
